<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SuppliesListTest" tests="10" skipped="0" failures="0" errors="0" timestamp="2022-04-04T08:49:38" hostname="bekzat-Lenovo-Legion-Y530-15ICH" time="3.414">
  <properties/>
  <testcase name="testCreateNewSuppliesList" classname="SuppliesListTest" time="0.179"/>
  <testcase name="testDeleteSuppliesList" classname="SuppliesListTest" time="0.184"/>
  <testcase name="testGetAllSuppliesList" classname="SuppliesListTest" time="0.24"/>
  <testcase name="testGetSuppliesListById" classname="SuppliesListTest" time="1.351"/>
  <testcase name="testGetSuppliesListByLessQuantity" classname="SuppliesListTest" time="0.351"/>
  <testcase name="testGetSuppliesListByMoreQuantity" classname="SuppliesListTest" time="0.212"/>
  <testcase name="testGetSuppliesListByProduct" classname="SuppliesListTest" time="0.233"/>
  <testcase name="testGetSuppliesListByQuantity" classname="SuppliesListTest" time="0.238"/>
  <testcase name="testGetSuppliesListBySupplies" classname="SuppliesListTest" time="0.212"/>
  <testcase name="testUpdateSuppliesList" classname="SuppliesListTest" time="0.205"/>
  <system-out><![CDATA[11:49:38.008 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.008 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.009 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.009 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:38.009 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 557
11:49:38.009 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.009 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.009 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.009 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.009 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.009 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.009 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.009 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=557}
11:49:38.025 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.025 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.026 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.026 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.026 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.026 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:38.027 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 443
11:49:38.027 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.027 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.027 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.027 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.027 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.027 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.027 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.027 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=443, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#557}
11:49:38.042 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.042 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.042 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.042 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.042 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.042 [Test worker] DEBUG org.hibernate.SQL - insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
Hibernate: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:38.043 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 284
11:49:38.043 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.043 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.043 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.043 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.043 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.043 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.043 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.043 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=284, email=wokker0@infoseek.co.jp}
11:49:38.059 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.059 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.059 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.059 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.059 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.059 [Test worker] DEBUG org.hibernate.SQL - insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
Hibernate: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:38.061 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 267
11:49:38.061 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.061 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.061 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.061 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.061 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.061 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.061 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.061 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=267, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#284, status=в процессе}
11:49:38.075 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.075 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.075 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.075 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.076 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.076 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:38.077 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 147
11:49:38.078 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.078 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.078 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.078 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.078 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.078 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.078 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.078 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#267, supplies_list_id=147, quantity=3, product_id=web_prak.java.classes.Products#443}
11:49:38.092 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.092 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.093 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
11:49:38.096 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:38.097 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#147]
11:49:38.097 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 443
11:49:38.097 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 267
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#147]
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#443]
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 557
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#443]
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#557]
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#557]
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#267]
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 284
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#267]
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#284]
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:38.098 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:38.099 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:38.099 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:38.099 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:38.099 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:38.099 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:38.099 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:38.099 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#284]
11:49:38.099 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies_list#147
11:49:38.099 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.100 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.100 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.100 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.100 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.100 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.100 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.100 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.100 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.100 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#267, supplies_list_id=147, quantity=3, product_id=web_prak.java.classes.Products#443}
11:49:38.100 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:38.120 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.120 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.120 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.120 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.120 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.120 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.120 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.120 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.120 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.120 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.120 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.120 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=443, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#557}
11:49:38.120 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:38.137 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.137 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.137 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.137 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.137 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.137 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.137 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.137 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.138 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.138 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.138 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.138 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=557}
11:49:38.138 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:38.153 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.153 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.154 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.154 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.154 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.154 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.154 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.154 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.154 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.154 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.154 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.154 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=267, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#284, status=в процессе}
11:49:38.154 [Test worker] DEBUG org.hibernate.SQL - delete from supplies where supply_id=?
Hibernate: delete from supplies where supply_id=?
11:49:38.171 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.171 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.171 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.171 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.171 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.171 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.171 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.171 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.171 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.171 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.171 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.171 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=284, email=wokker0@infoseek.co.jp}
11:49:38.171 [Test worker] DEBUG org.hibernate.SQL - delete from suppliers where supplier_id=?
Hibernate: delete from suppliers where supplier_id=?
11:49:38.187 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.187 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.187 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.188 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.188 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.188 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.188 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:38.188 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 558
11:49:38.188 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.188 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.188 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.188 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.189 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.189 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.189 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.189 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=558}
11:49:38.204 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.204 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.204 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.204 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.205 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.205 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:38.206 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 444
11:49:38.206 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.206 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.206 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.206 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.206 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.206 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.206 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.206 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=444, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#558}
11:49:38.221 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.221 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.221 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.221 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.221 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.221 [Test worker] DEBUG org.hibernate.SQL - insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
Hibernate: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:38.223 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 285
11:49:38.223 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.223 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.223 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.223 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.223 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.223 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.223 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.224 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=285, email=wokker0@infoseek.co.jp}
11:49:38.238 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.238 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.238 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.238 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.239 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.239 [Test worker] DEBUG org.hibernate.SQL - insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
Hibernate: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:38.241 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 268
11:49:38.241 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.241 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.241 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.241 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.242 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.242 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.242 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.242 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=268, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#285, status=в процессе}
11:49:38.254 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.254 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.255 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.255 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.255 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.255 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:38.257 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 148
11:49:38.257 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.257 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.257 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.257 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.258 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.258 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.258 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.258 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#268, supplies_list_id=148, quantity=3, product_id=web_prak.java.classes.Products#444}
11:49:38.271 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.272 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.272 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
11:49:38.276 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:38.277 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#148]
11:49:38.277 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 444
11:49:38.277 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:38.277 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:38.277 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:38.277 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 268
11:49:38.277 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#148]
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#444]
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 558
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#444]
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#558]
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:38.278 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#558]
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#268]
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 285
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#268]
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#285]
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:38.279 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#285]
11:49:38.280 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies_list#148
11:49:38.280 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.281 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.281 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.281 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.281 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.281 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.281 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.281 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.281 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.281 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#268, supplies_list_id=148, quantity=3, product_id=web_prak.java.classes.Products#444}
11:49:38.282 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:38.299 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.299 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.299 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.299 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.299 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.300 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.300 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.300 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.300 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.300 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.300 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.300 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=444, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#558}
11:49:38.300 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:38.316 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.316 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.316 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.316 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.317 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.317 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.317 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.317 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.317 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.317 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.317 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.317 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=558}
11:49:38.318 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:38.332 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.332 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.333 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.333 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.333 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.333 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.333 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.333 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.334 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.334 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.334 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.334 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=268, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#285, status=в процессе}
11:49:38.334 [Test worker] DEBUG org.hibernate.SQL - delete from supplies where supply_id=?
Hibernate: delete from supplies where supply_id=?
11:49:38.350 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.350 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.350 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.350 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.350 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.350 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.351 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.351 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.351 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.351 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.351 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.351 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=285, email=wokker0@infoseek.co.jp}
11:49:38.351 [Test worker] DEBUG org.hibernate.SQL - delete from suppliers where supplier_id=?
Hibernate: delete from suppliers where supplier_id=?
11:49:38.366 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.366 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.366 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.367 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
11:49:38.370 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies_list#148
11:49:38.370 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.372 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.372 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.373 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.373 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:38.374 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 559
11:49:38.374 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.374 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.375 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.375 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.375 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.375 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.375 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.375 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=559}
11:49:38.394 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.394 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.395 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.395 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.395 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.395 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:38.397 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 445
11:49:38.397 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.397 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.397 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.397 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.397 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.397 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.397 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.397 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=445, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#559}
11:49:38.410 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.410 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.410 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.410 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.411 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.411 [Test worker] DEBUG org.hibernate.SQL - insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
Hibernate: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:38.411 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 286
11:49:38.411 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.411 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.411 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.411 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.411 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.411 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.411 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.411 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=286, email=wokker0@infoseek.co.jp}
11:49:38.427 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.427 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.428 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.428 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.428 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.428 [Test worker] DEBUG org.hibernate.SQL - insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
Hibernate: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:38.428 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 269
11:49:38.428 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.429 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.429 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.429 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.429 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.429 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.429 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.429 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=269, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#286, status=в процессе}
11:49:38.444 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.444 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.444 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.444 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.444 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.444 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:38.445 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 149
11:49:38.445 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.445 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.445 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.445 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.445 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.445 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.445 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.445 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#269, supplies_list_id=149, quantity=3, product_id=web_prak.java.classes.Products#445}
11:49:38.461 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.461 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.461 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.461 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.461 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.461 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:38.462 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 150
11:49:38.462 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.462 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.462 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.462 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.462 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.462 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.462 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.462 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#269, supplies_list_id=150, quantity=3, product_id=web_prak.java.classes.Products#445}
11:49:38.478 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.478 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.478 [Test worker] DEBUG org.hibernate.query.criteria.internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Supplies_list as generatedAlias0
11:49:38.479 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from web_prak.java.classes.Supplies_list as generatedAlias0
11:49:38.480 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:38.480 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'web_prak'
       |     |  |  |  \-[IDENT] Node: 'java'
       |     |  |  \-[IDENT] Node: 'classes'
       |     |  \-[IDENT] Node: 'Supplies_list'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

11:49:38.480 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:38.480 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Supplies_list (generatedAlias0) -> supplies_l0_
11:49:38.481 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> supplies_l0_.supplies_list_id
11:49:38.481 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:38.481 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} supplies_l0_.supplies_list_id ) ( FromClause{level=1} supplies_list supplies_l0_ ) )
11:49:38.481 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Supplies_list): [supplies_list]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

11:49:38.482 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [supplies_list supplies_l0_]
11:49:38.482 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:38.482 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (supplies_list)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'supplies_l0_.supplies_list_id as supplies1_7_' {alias=generatedAlias0, className=web_prak.java.classes.Supplies_list, tableAlias=supplies_l0_}
    |  \-[SQL_TOKEN] SqlFragment: 'supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[supplies_l0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'supplies_list supplies_l0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=supplies_list,tableAlias=supplies_l0_,origin=null,columns={,className=web_prak.java.classes.Supplies_list}}

11:49:38.482 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:38.482 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from web_prak.java.classes.Supplies_list as generatedAlias0
11:49:38.482 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_
11:49:38.482 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:38.483 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_
11:49:38.485 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:38.485 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#149]
11:49:38.485 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:38.485 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#150]
11:49:38.485 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#149]
11:49:38.486 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 445
11:49:38.486 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:38.486 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:38.487 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#445]
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 559
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#445]
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#559]
11:49:38.488 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:38.489 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:38.489 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:38.489 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:38.489 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#559]
11:49:38.489 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#445
11:49:38.489 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:38.489 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:38.489 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 269
11:49:38.489 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:38.489 [Test worker] DEBUG org.hibernate.SQL - select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
Hibernate: select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
11:49:38.492 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#269]
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 286
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#269]
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#286]
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:38.493 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#286]
11:49:38.494 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies#269
11:49:38.494 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#149]
11:49:38.494 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#150]
11:49:38.494 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 445
11:49:38.494 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:38.494 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:38.494 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:38.494 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 269
11:49:38.494 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:38.494 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#150]
11:49:38.494 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.505 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.505 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.505 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.505 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.505 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.505 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.505 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.505 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.506 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#269, supplies_list_id=149, quantity=3, product_id=web_prak.java.classes.Products#445}
11:49:38.506 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:38.528 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.528 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.528 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.528 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.528 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.528 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.528 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.528 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.529 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.529 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.529 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.529 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#269, supplies_list_id=150, quantity=3, product_id=web_prak.java.classes.Products#445}
11:49:38.529 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:38.544 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.544 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.544 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.544 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.544 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.545 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.545 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.545 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.545 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.545 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.545 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.545 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=445, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#559}
11:49:38.545 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:38.561 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.562 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.562 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.562 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.562 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.562 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.563 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.563 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.563 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.563 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.563 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.563 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=559}
11:49:38.563 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:38.578 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.578 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.578 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.578 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.578 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.579 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.579 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.579 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.579 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.579 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.579 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.579 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=269, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#286, status=в процессе}
11:49:38.580 [Test worker] DEBUG org.hibernate.SQL - delete from supplies where supply_id=?
Hibernate: delete from supplies where supply_id=?
11:49:38.594 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.594 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.595 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.595 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.595 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.595 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.595 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.595 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.596 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.596 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.596 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.596 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=286, email=wokker0@infoseek.co.jp}
11:49:38.596 [Test worker] DEBUG org.hibernate.SQL - delete from suppliers where supplier_id=?
Hibernate: delete from suppliers where supplier_id=?
11:49:38.611 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.612 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.612 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.614 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.614 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.614 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.614 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:38.615 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 560
11:49:38.616 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.616 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.616 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.616 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.616 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.616 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.616 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.616 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=560}
11:49:38.628 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.628 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.628 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.628 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.629 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.629 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:38.631 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 446
11:49:38.631 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.631 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.631 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.631 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.632 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.632 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.632 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.632 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=446, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#560}
11:49:38.645 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.645 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.646 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.646 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.646 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.646 [Test worker] DEBUG org.hibernate.SQL - insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
Hibernate: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:38.647 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 287
11:49:38.647 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.648 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.648 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.648 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.648 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.648 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.648 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.648 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=287, email=wokker0@infoseek.co.jp}
11:49:38.661 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.662 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.662 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.662 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.662 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.663 [Test worker] DEBUG org.hibernate.SQL - insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
Hibernate: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:38.665 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 270
11:49:38.665 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.665 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.665 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.665 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.665 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.665 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.666 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.666 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=270, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#287, status=в процессе}
11:49:38.679 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.679 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.679 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.679 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.680 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:38.680 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:38.682 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 151
11:49:38.682 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:38.682 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.682 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.682 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.682 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:38.682 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.682 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.682 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#270, supplies_list_id=151, quantity=3, product_id=web_prak.java.classes.Products#446}
11:49:38.695 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.695 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.696 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
11:49:38.699 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:38.700 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#151]
11:49:38.700 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 446
11:49:38.700 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:38.700 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:38.700 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:38.700 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 270
11:49:38.700 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:38.700 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#151]
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#446]
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 560
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#446]
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#560]
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#560]
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#270]
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:38.701 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 287
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#270]
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#287]
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:38.702 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#287]
11:49:38.702 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies_list#151
11:49:38.702 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.703 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.704 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.704 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.704 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.704 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.704 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.704 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.704 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.704 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#270, supplies_list_id=151, quantity=3, product_id=web_prak.java.classes.Products#446}
11:49:38.705 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:38.985 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.985 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:38.985 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:38.986 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:38.986 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:38.986 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:38.986 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:38.986 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:38.986 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:38.986 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:38.986 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:38.986 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=446, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#560}
11:49:38.986 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:39.254 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:39.255 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:39.255 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:39.255 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:39.255 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:39.255 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:39.255 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:39.255 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:39.256 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:39.256 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:39.256 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:39.256 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=560}
11:49:39.256 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:39.880 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:39.880 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:39.880 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:39.880 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:39.880 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:39.881 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:39.881 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:39.881 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:39.881 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:39.881 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:39.881 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:39.881 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=270, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#287, status=в процессе}
11:49:39.881 [Test worker] DEBUG org.hibernate.SQL - delete from supplies where supply_id=?
Hibernate: delete from supplies where supply_id=?
11:49:39.930 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:39.931 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:39.931 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:39.931 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:39.931 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:39.932 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:39.932 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:39.932 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:39.932 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:39.932 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:39.932 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:39.932 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=287, email=wokker0@infoseek.co.jp}
11:49:39.932 [Test worker] DEBUG org.hibernate.SQL - delete from suppliers where supplier_id=?
Hibernate: delete from suppliers where supplier_id=?
11:49:39.964 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:39.964 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:39.964 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:39.965 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:39.965 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:39.965 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:39.965 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:39.966 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 561
11:49:39.966 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:39.966 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:39.966 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:39.966 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:39.966 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:39.966 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:39.966 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:39.966 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=561}
11:49:39.997 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:39.998 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:39.998 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:39.998 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:39.998 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:39.998 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:40.000 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 447
11:49:40.000 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.000 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.000 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.000 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.000 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.000 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.000 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.000 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=447, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#561}
11:49:40.031 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.031 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.031 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.031 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.031 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.032 [Test worker] DEBUG org.hibernate.SQL - insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
Hibernate: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:40.032 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 288
11:49:40.032 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.032 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.032 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.032 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.032 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.032 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.032 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.032 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=288, email=wokker0@infoseek.co.jp}
11:49:40.065 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.065 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.065 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.065 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.065 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.065 [Test worker] DEBUG org.hibernate.SQL - insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
Hibernate: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:40.066 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 271
11:49:40.066 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.066 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.066 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.066 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.066 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.066 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.066 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.066 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=271, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#288, status=в процессе}
11:49:40.098 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.098 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.098 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.098 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.099 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.099 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:40.100 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 152
11:49:40.100 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.100 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.100 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.100 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.100 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.100 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.100 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.100 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#271, supplies_list_id=152, quantity=3, product_id=web_prak.java.classes.Products#447}
11:49:40.132 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.132 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.132 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.132 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.132 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.132 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:40.133 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 153
11:49:40.133 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.133 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.133 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.133 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.133 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.133 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.133 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.133 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#271, supplies_list_id=153, quantity=3, product_id=web_prak.java.classes.Products#447}
11:49:40.165 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.165 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.166 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM web_prak.java.classes.Supplies_list WHERE quantity >= :param
11:49:40.166 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.166 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'web_prak'
    |           |  |  \-[IDENT] Node: 'java'
    |           |  \-[IDENT] Node: 'classes'
    |           \-[IDENT] Node: 'Supplies_list'
    \-[WHERE] Node: 'WHERE'
       \-[GE] Node: '>='
          +-[IDENT] Node: 'quantity'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:40.166 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:40.167 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Supplies_list (<no alias>) -> supplies_l0_
11:49:40.167 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
11:49:40.167 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : quantity -> org.hibernate.type.IntegerType@7d8b66d9
11:49:40.167 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.quantity -> supplies_l0_.quantity
11:49:40.167 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:40.167 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} supplies_list supplies_l0_ ) ( WHERE ( >= ( supplies_l0_.quantity {synthetic-alias} quantity ) ? ) ) )
11:49:40.167 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
11:49:40.167 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Supplies_list): [supplies_list]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
          | path: {synthetic-alias}.quantity
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: quantity
          \-ParameterNode

11:49:40.167 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [supplies_list supplies_l0_]
11:49:40.167 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:40.168 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (supplies_list)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'supplies_l0_.supplies_list_id as supplies1_7_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=supplies_list,tableAlias=supplies_l0_,origin=null,columns={,className=web_prak.java.classes.Supplies_list}}}
    |  \-[SQL_TOKEN] SqlFragment: 'supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[supplies_l0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'supplies_list supplies_l0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=supplies_list,tableAlias=supplies_l0_,origin=null,columns={,className=web_prak.java.classes.Supplies_list}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'supplies_l0_.quantity' {propertyName=quantity,dereferenceType=PRIMITIVE,getPropertyPath=quantity,path={synthetic-alias}.quantity,tableAlias=supplies_l0_,className=web_prak.java.classes.Supplies_list,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'quantity' {originalText=quantity}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.IntegerType@7d8b66d9}

11:49:40.168 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.168 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM web_prak.java.classes.Supplies_list WHERE quantity >= :param
11:49:40.168 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ where supplies_l0_.quantity>=?
11:49:40.168 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.168 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ where supplies_l0_.quantity>=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ where supplies_l0_.quantity>=?
11:49:40.169 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:40.169 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#152]
11:49:40.169 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:40.169 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#153]
11:49:40.169 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#152]
11:49:40.169 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 447
11:49:40.169 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:40.169 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:40.170 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#447]
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 561
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#447]
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#561]
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#561]
11:49:40.171 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#447
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 271
11:49:40.171 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:40.171 [Test worker] DEBUG org.hibernate.SQL - select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
Hibernate: select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
11:49:40.172 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:40.172 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#271]
11:49:40.172 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:40.172 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:40.172 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:40.172 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:40.172 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 288
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#271]
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#288]
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#288]
11:49:40.173 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies#271
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#152]
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#153]
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 447
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 271
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#153]
11:49:40.173 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.173 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.173 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.173 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.173 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.173 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.173 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.173 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#271, supplies_list_id=152, quantity=3, product_id=web_prak.java.classes.Products#447}
11:49:40.173 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:40.199 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.199 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.199 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.199 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.199 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.199 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.199 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.199 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.199 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.199 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.199 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.200 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#271, supplies_list_id=153, quantity=3, product_id=web_prak.java.classes.Products#447}
11:49:40.200 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:40.233 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.233 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.233 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.233 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.233 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.233 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.234 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.234 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.234 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.234 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.234 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.234 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=447, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#561}
11:49:40.234 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:40.266 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.266 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.266 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.266 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.266 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.266 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.266 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.266 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.266 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.266 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.266 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.267 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=561}
11:49:40.267 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:40.282 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.283 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.283 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.283 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.283 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.283 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.283 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.283 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.283 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.283 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.283 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.283 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=271, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#288, status=в процессе}
11:49:40.283 [Test worker] DEBUG org.hibernate.SQL - delete from supplies where supply_id=?
Hibernate: delete from supplies where supply_id=?
11:49:40.300 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.300 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.300 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.300 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.300 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.301 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.301 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.301 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.301 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.301 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.301 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.301 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=288, email=wokker0@infoseek.co.jp}
11:49:40.301 [Test worker] DEBUG org.hibernate.SQL - delete from suppliers where supplier_id=?
Hibernate: delete from suppliers where supplier_id=?
11:49:40.316 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.316 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.316 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.318 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.318 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.318 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.318 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:40.320 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 562
11:49:40.320 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.320 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.320 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.320 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.320 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.320 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.320 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.320 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=562}
11:49:40.332 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.333 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.333 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.333 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.333 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.334 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:40.336 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 448
11:49:40.336 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.336 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.336 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.336 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.337 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.337 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.337 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.337 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=448, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#562}
11:49:40.350 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.350 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.350 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.350 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.350 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.350 [Test worker] DEBUG org.hibernate.SQL - insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
Hibernate: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:40.351 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 289
11:49:40.351 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.351 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.352 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.352 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.352 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.352 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.352 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.352 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=289, email=wokker0@infoseek.co.jp}
11:49:40.366 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.366 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.366 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.366 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.366 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.367 [Test worker] DEBUG org.hibernate.SQL - insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
Hibernate: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:40.368 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 272
11:49:40.368 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.368 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.368 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.368 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.368 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.368 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.368 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.368 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=272, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#289, status=в процессе}
11:49:40.383 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.383 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.383 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.383 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.383 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.383 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:40.384 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 154
11:49:40.384 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.384 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.384 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.384 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.384 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.384 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.384 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.384 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#272, supplies_list_id=154, quantity=3, product_id=web_prak.java.classes.Products#448}
11:49:40.400 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.400 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.400 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.400 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.400 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.400 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:40.401 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 155
11:49:40.401 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.402 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.402 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.402 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.402 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.402 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.402 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.402 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#272, supplies_list_id=155, quantity=3, product_id=web_prak.java.classes.Products#448}
11:49:40.417 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.417 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.417 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM web_prak.java.classes.Supplies_list WHERE quantity <= :param
11:49:40.417 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'web_prak'
    |           |  |  \-[IDENT] Node: 'java'
    |           |  \-[IDENT] Node: 'classes'
    |           \-[IDENT] Node: 'Supplies_list'
    \-[WHERE] Node: 'WHERE'
       \-[LE] Node: '<='
          +-[IDENT] Node: 'quantity'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Supplies_list (<no alias>) -> supplies_l0_
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : quantity -> org.hibernate.type.IntegerType@7d8b66d9
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.quantity -> supplies_l0_.quantity
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} supplies_list supplies_l0_ ) ( WHERE ( <= ( supplies_l0_.quantity {synthetic-alias} quantity ) ? ) ) )
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Supplies_list): [supplies_list]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
          | path: {synthetic-alias}.quantity
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: quantity
          \-ParameterNode

11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [supplies_list supplies_l0_]
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (supplies_list)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'supplies_l0_.supplies_list_id as supplies1_7_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=supplies_list,tableAlias=supplies_l0_,origin=null,columns={,className=web_prak.java.classes.Supplies_list}}}
    |  \-[SQL_TOKEN] SqlFragment: 'supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[supplies_l0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'supplies_list supplies_l0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=supplies_list,tableAlias=supplies_l0_,origin=null,columns={,className=web_prak.java.classes.Supplies_list}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'supplies_l0_.quantity' {propertyName=quantity,dereferenceType=PRIMITIVE,getPropertyPath=quantity,path={synthetic-alias}.quantity,tableAlias=supplies_l0_,className=web_prak.java.classes.Supplies_list,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'quantity' {originalText=quantity}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.IntegerType@7d8b66d9}

11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM web_prak.java.classes.Supplies_list WHERE quantity <= :param
11:49:40.418 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ where supplies_l0_.quantity<=?
11:49:40.419 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.419 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ where supplies_l0_.quantity<=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ where supplies_l0_.quantity<=?
11:49:40.420 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:40.420 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#154]
11:49:40.420 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:40.420 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#155]
11:49:40.420 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#154]
11:49:40.420 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 448
11:49:40.420 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:40.420 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:40.420 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#448]
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 562
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#448]
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#562]
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#562]
11:49:40.421 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#448
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 272
11:49:40.421 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:40.421 [Test worker] DEBUG org.hibernate.SQL - select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
Hibernate: select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
11:49:40.422 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#272]
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 289
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#272]
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#289]
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#289]
11:49:40.422 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies#272
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#154]
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#155]
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 448
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 272
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:40.422 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#155]
11:49:40.423 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.423 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.423 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.424 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.424 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.424 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.424 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.424 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.424 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.424 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#272, supplies_list_id=154, quantity=3, product_id=web_prak.java.classes.Products#448}
11:49:40.424 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:40.444 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.444 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.444 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.444 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.444 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.444 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.444 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.444 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.444 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.444 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.444 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.444 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#272, supplies_list_id=155, quantity=3, product_id=web_prak.java.classes.Products#448}
11:49:40.444 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:40.461 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.461 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.461 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.461 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.461 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.462 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.462 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.462 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.462 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.462 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.462 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.462 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=448, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#562}
11:49:40.462 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:40.478 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.478 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.478 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.478 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.478 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.478 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.478 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.478 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.478 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.478 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.478 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.478 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=562}
11:49:40.478 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:40.495 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.495 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.495 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.496 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.496 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.496 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.496 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.496 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.496 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.496 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.496 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.496 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=272, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#289, status=в процессе}
11:49:40.497 [Test worker] DEBUG org.hibernate.SQL - delete from supplies where supply_id=?
Hibernate: delete from supplies where supply_id=?
11:49:40.511 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.512 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.512 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.512 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.512 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.512 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.512 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.512 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.513 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.513 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.513 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.513 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=289, email=wokker0@infoseek.co.jp}
11:49:40.513 [Test worker] DEBUG org.hibernate.SQL - delete from suppliers where supplier_id=?
Hibernate: delete from suppliers where supplier_id=?
11:49:40.529 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.529 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.529 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.531 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.531 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.531 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.531 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:40.532 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 563
11:49:40.532 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.533 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.533 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.533 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.533 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.533 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.533 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.533 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=563}
11:49:40.545 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.545 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.546 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.546 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.546 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.546 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:40.548 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 449
11:49:40.548 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.548 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.548 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.548 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.549 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.549 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.549 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.549 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=449, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#563}
11:49:40.562 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.562 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.563 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.563 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.563 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.563 [Test worker] DEBUG org.hibernate.SQL - insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
Hibernate: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:40.564 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 290
11:49:40.564 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.564 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.565 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.565 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.565 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.565 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.565 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.565 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=290, email=wokker0@infoseek.co.jp}
11:49:40.579 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.579 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.579 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.579 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.579 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.580 [Test worker] DEBUG org.hibernate.SQL - insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
Hibernate: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:40.582 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 273
11:49:40.582 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.582 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.582 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.582 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.582 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.582 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.582 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.582 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=273, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#290, status=в процессе}
11:49:40.596 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.596 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.596 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.596 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.597 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.597 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:40.599 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 156
11:49:40.599 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.599 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.599 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.599 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.599 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.599 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.599 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.599 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#273, supplies_list_id=156, quantity=3, product_id=web_prak.java.classes.Products#449}
11:49:40.612 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.612 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.613 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.613 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.613 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.613 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:40.615 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 157
11:49:40.615 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.615 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.615 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.615 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.615 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.615 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.615 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.616 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#273, supplies_list_id=157, quantity=4, product_id=web_prak.java.classes.Products#449}
11:49:40.629 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.629 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.630 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT d FROM web_prak.java.classes.Supplies_list d JOIN d.product_id s WHERE s.product_id = :param
11:49:40.631 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.632 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'web_prak'
    |  |  |  |  |  |  \-[IDENT] Node: 'java'
    |  |  |  |  |  \-[IDENT] Node: 'classes'
    |  |  |  |  \-[IDENT] Node: 'Supplies_list'
    |  |  |  \-[ALIAS] Node: 'd'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'd'
    |  |     |  \-[IDENT] Node: 'product_id'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'product_id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:40.632 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:40.632 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Supplies_list (d) -> supplies_l0_
11:49:40.632 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d -> supplies_l0_.supplies_list_id
11:49:40.633 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : product_id -> org.hibernate.type.ManyToOneType(web_prak.java.classes.Products)
11:49:40.633 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceEntityJoin() : generating join for product_id in web_prak.java.classes.Supplies_list (s) parent = [ {null} ]
11:49:40.634 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Products (s) -> products1_
11:49:40.634 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : d.product_id -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=products,tableAlias=products1_,origin=supplies_list supplies_l0_,columns={supplies_l0_.product_id,className=web_prak.java.classes.Products}}
11:49:40.634 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d.product_id -> supplies_l0_.product_id
11:49:40.634 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'products products1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=web_prak.java.classes.Supplies_list.product_id,tableName=products,tableAlias=products1_,origin=supplies_list supplies_l0_,columns={supplies_l0_.product_id,className=web_prak.java.classes.Products}}

11:49:40.634 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d -> supplies_l0_.supplies_list_id
11:49:40.634 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> products1_.product_id
11:49:40.635 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : product_id -> org.hibernate.type.LongType@1d1bf7bf
11:49:40.635 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s.product_id -> products1_.product_id
11:49:40.635 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:40.635 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} supplies_l0_.supplies_list_id ) ( FromClause{level=1} ( supplies_list supplies_l0_ products products1_ ) ) ( WHERE ( = ( products1_.product_id products1_.product_id product_id ) ? ) ) )
11:49:40.636 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Supplies_list): [supplies_list]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
    |  | originalText: d
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          | path: s.product_id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          |  | originalText: s
          |  \-IdentNode
          |    persister: null
          |    originalText: product_id
          \-ParameterNode

11:49:40.636 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [supplies_list supplies_l0_]
11:49:40.637 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [inner join products products1_ on supplies_l0_.product_id=products1_.product_id]
11:49:40.637 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:40.637 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (supplies_list,products)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'supplies_l0_.supplies_list_id as supplies1_7_' {alias=d, className=web_prak.java.classes.Supplies_list, tableAlias=supplies_l0_}
    |  \-[SQL_TOKEN] SqlFragment: 'supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s, d], fromElementByTableAlias=[supplies_l0_, products1_], fromElementsByPath=[d.product_id], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'supplies_list supplies_l0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=supplies_list,tableAlias=supplies_l0_,origin=null,columns={,className=web_prak.java.classes.Supplies_list}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join products products1_ on supplies_l0_.product_id=products1_.product_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=web_prak.java.classes.Supplies_list.product_id,tableName=products,tableAlias=products1_,origin=supplies_list supplies_l0_,columns={supplies_l0_.product_id,className=web_prak.java.classes.Products}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'products1_.product_id' {propertyName=product_id,dereferenceType=PRIMITIVE,getPropertyPath=product_id,path=s.product_id,tableAlias=products1_,className=web_prak.java.classes.Products,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'products1_.product_id' {alias=s, className=web_prak.java.classes.Products, tableAlias=products1_}
          |  \-[IDENT] IdentNode: 'product_id' {originalText=product_id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.LongType@1d1bf7bf}

11:49:40.637 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.637 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT d FROM web_prak.java.classes.Supplies_list d JOIN d.product_id s WHERE s.product_id = :param
11:49:40.637 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ inner join products products1_ on supplies_l0_.product_id=products1_.product_id where products1_.product_id=?
11:49:40.637 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.638 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ inner join products products1_ on supplies_l0_.product_id=products1_.product_id where products1_.product_id=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ inner join products products1_ on supplies_l0_.product_id=products1_.product_id where products1_.product_id=?
11:49:40.640 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:40.640 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#156]
11:49:40.641 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:40.641 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#157]
11:49:40.641 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#156]
11:49:40.641 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 449
11:49:40.641 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:40.641 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:40.642 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#449]
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 563
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:40.643 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#449]
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#563]
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#563]
11:49:40.644 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#449
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 273
11:49:40.644 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:40.644 [Test worker] DEBUG org.hibernate.SQL - select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
Hibernate: select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
11:49:40.646 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#273]
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 290
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#273]
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#290]
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:40.647 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#290]
11:49:40.647 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies#273
11:49:40.648 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#156]
11:49:40.648 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#157]
11:49:40.648 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 449
11:49:40.648 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:40.648 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 4
11:49:40.648 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.648 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 273
11:49:40.648 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:40.648 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#157]
11:49:40.648 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.650 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.650 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.650 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.650 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.650 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.650 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.650 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.650 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.650 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#273, supplies_list_id=156, quantity=3, product_id=web_prak.java.classes.Products#449}
11:49:40.651 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:40.668 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.668 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.668 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.668 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.668 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.668 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.668 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.668 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.668 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.668 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.668 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.668 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#273, supplies_list_id=157, quantity=4, product_id=web_prak.java.classes.Products#449}
11:49:40.668 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:40.685 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.685 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.685 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.685 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.685 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.685 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.685 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.685 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.686 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.686 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.686 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.686 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=449, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#563}
11:49:40.686 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:40.701 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.701 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.701 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.702 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.702 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.702 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.702 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.702 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.702 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.702 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.702 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.702 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=563}
11:49:40.702 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:40.730 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.730 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.730 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.730 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.730 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.731 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.731 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.731 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.731 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.731 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.731 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.731 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=273, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#290, status=в процессе}
11:49:40.731 [Test worker] DEBUG org.hibernate.SQL - delete from supplies where supply_id=?
Hibernate: delete from supplies where supply_id=?
11:49:40.746 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.746 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.746 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.746 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.746 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.747 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.747 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.747 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.747 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.747 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.747 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.747 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=290, email=wokker0@infoseek.co.jp}
11:49:40.747 [Test worker] DEBUG org.hibernate.SQL - delete from suppliers where supplier_id=?
Hibernate: delete from suppliers where supplier_id=?
11:49:40.763 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.763 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.763 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.765 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.765 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.765 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.766 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:40.767 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 564
11:49:40.767 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.767 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.767 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.767 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.767 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.768 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.768 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.768 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=564}
11:49:40.780 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.780 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.780 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.780 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.780 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.781 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:40.783 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 450
11:49:40.783 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.783 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.783 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.783 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.783 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.783 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.783 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.783 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=450, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#564}
11:49:40.814 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.814 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.815 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.815 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.815 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.815 [Test worker] DEBUG org.hibernate.SQL - insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
Hibernate: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:40.816 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 291
11:49:40.816 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.816 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.817 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.817 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.817 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.817 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.817 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.817 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=291, email=wokker0@infoseek.co.jp}
11:49:40.830 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.830 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.831 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.831 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.831 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.831 [Test worker] DEBUG org.hibernate.SQL - insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
Hibernate: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:40.833 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 274
11:49:40.834 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.834 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.834 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.834 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.834 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.834 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.834 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.834 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=274, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#291, status=в процессе}
11:49:40.847 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.847 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.847 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.847 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.847 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.847 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:40.849 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 158
11:49:40.849 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.849 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.849 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.849 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.849 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.849 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.849 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.850 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#274, supplies_list_id=158, quantity=3, product_id=web_prak.java.classes.Products#450}
11:49:40.864 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.864 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.864 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.864 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.865 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:40.865 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:40.866 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 159
11:49:40.866 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:40.867 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.867 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.867 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.867 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:40.867 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.867 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.867 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#274, supplies_list_id=159, quantity=3, product_id=web_prak.java.classes.Products#450}
11:49:40.880 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.880 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.881 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM web_prak.java.classes.Supplies_list WHERE quantity = :param
11:49:40.881 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.881 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'web_prak'
    |           |  |  \-[IDENT] Node: 'java'
    |           |  \-[IDENT] Node: 'classes'
    |           \-[IDENT] Node: 'Supplies_list'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'quantity'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:40.882 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:40.882 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Supplies_list (<no alias>) -> supplies_l0_
11:49:40.882 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
11:49:40.882 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : quantity -> org.hibernate.type.IntegerType@7d8b66d9
11:49:40.882 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.quantity -> supplies_l0_.quantity
11:49:40.882 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:40.882 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} supplies_list supplies_l0_ ) ( WHERE ( = ( supplies_l0_.quantity {synthetic-alias} quantity ) ? ) ) )
11:49:40.882 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
11:49:40.883 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Supplies_list): [supplies_list]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
          | path: {synthetic-alias}.quantity
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: quantity
          \-ParameterNode

11:49:40.883 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [supplies_list supplies_l0_]
11:49:40.883 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:40.883 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (supplies_list)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'supplies_l0_.supplies_list_id as supplies1_7_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=supplies_list,tableAlias=supplies_l0_,origin=null,columns={,className=web_prak.java.classes.Supplies_list}}}
    |  \-[SQL_TOKEN] SqlFragment: 'supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[supplies_l0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'supplies_list supplies_l0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=supplies_list,tableAlias=supplies_l0_,origin=null,columns={,className=web_prak.java.classes.Supplies_list}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'supplies_l0_.quantity' {propertyName=quantity,dereferenceType=PRIMITIVE,getPropertyPath=quantity,path={synthetic-alias}.quantity,tableAlias=supplies_l0_,className=web_prak.java.classes.Supplies_list,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'quantity' {originalText=quantity}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.IntegerType@7d8b66d9}

11:49:40.884 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.884 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM web_prak.java.classes.Supplies_list WHERE quantity = :param
11:49:40.884 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ where supplies_l0_.quantity=?
11:49:40.884 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:40.884 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ where supplies_l0_.quantity=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ where supplies_l0_.quantity=?
11:49:40.885 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:40.886 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#158]
11:49:40.886 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:40.886 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#159]
11:49:40.886 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#158]
11:49:40.886 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 450
11:49:40.886 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:40.886 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:40.887 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#450]
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 564
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#450]
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#564]
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#564]
11:49:40.887 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#450
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 274
11:49:40.887 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:40.887 [Test worker] DEBUG org.hibernate.SQL - select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
Hibernate: select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
11:49:40.888 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#274]
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 291
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#274]
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#291]
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#291]
11:49:40.889 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies#274
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#158]
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#159]
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 450
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 274
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:40.889 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#159]
11:49:40.889 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.890 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.890 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.890 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.890 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.890 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.890 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.890 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.890 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.890 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#274, supplies_list_id=158, quantity=3, product_id=web_prak.java.classes.Products#450}
11:49:40.890 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:40.908 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.908 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.908 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.908 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.908 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.908 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.909 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.909 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.909 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.909 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.909 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.909 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#274, supplies_list_id=159, quantity=3, product_id=web_prak.java.classes.Products#450}
11:49:40.909 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:40.925 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.925 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.925 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.925 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.925 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.925 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.925 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.925 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.925 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.925 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.925 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.925 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=450, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#564}
11:49:40.925 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:40.942 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.942 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.942 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.942 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.942 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.942 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.942 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.942 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.942 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.943 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.943 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.943 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=564}
11:49:40.943 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:40.969 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.969 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.970 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.970 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.970 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.970 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.970 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.970 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.971 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.971 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.971 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.971 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=274, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#291, status=в процессе}
11:49:40.971 [Test worker] DEBUG org.hibernate.SQL - delete from supplies where supply_id=?
Hibernate: delete from supplies where supply_id=?
11:49:40.987 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.987 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:40.987 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:40.987 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:40.987 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:40.988 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:40.988 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:40.988 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:40.988 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:40.988 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:40.988 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:40.988 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=291, email=wokker0@infoseek.co.jp}
11:49:40.989 [Test worker] DEBUG org.hibernate.SQL - delete from suppliers where supplier_id=?
Hibernate: delete from suppliers where supplier_id=?
11:49:41.003 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.003 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.003 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.005 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.005 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.005 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.005 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:41.007 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 565
11:49:41.007 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.007 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.007 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.007 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.008 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.008 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.008 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.008 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=565}
11:49:41.020 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.020 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.021 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.021 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.021 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.021 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:41.023 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 451
11:49:41.023 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.023 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.023 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.023 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.023 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.023 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.023 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.024 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=451, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#565}
11:49:41.036 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.036 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.037 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.037 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.037 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.037 [Test worker] DEBUG org.hibernate.SQL - insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
Hibernate: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:41.037 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 292
11:49:41.037 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.037 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.037 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.037 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.038 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.038 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.038 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.038 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=292, email=wokker0@infoseek.co.jp}
11:49:41.053 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.053 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.053 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.053 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.053 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.053 [Test worker] DEBUG org.hibernate.SQL - insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
Hibernate: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:41.054 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 275
11:49:41.054 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.054 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.054 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.054 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.054 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.054 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.054 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.054 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=275, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#292, status=в процессе}
11:49:41.070 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.070 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.070 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.070 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.070 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.070 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:41.071 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 160
11:49:41.071 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.071 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.071 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.071 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.071 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.071 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.071 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.071 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#275, supplies_list_id=160, quantity=3, product_id=web_prak.java.classes.Products#451}
11:49:41.097 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.097 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.097 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.097 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.098 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.098 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:41.098 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 161
11:49:41.098 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.098 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.098 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.098 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.099 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.099 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.099 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.099 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#275, supplies_list_id=161, quantity=4, product_id=web_prak.java.classes.Products#451}
11:49:41.115 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.115 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.115 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT d FROM web_prak.java.classes.Supplies_list d JOIN d.supply_id s WHERE s.supply_id = :param
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'web_prak'
    |  |  |  |  |  |  \-[IDENT] Node: 'java'
    |  |  |  |  |  \-[IDENT] Node: 'classes'
    |  |  |  |  \-[IDENT] Node: 'Supplies_list'
    |  |  |  \-[ALIAS] Node: 'd'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'd'
    |  |     |  \-[IDENT] Node: 'supply_id'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'supply_id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Supplies_list (d) -> supplies_l0_
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d -> supplies_l0_.supplies_list_id
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : supply_id -> org.hibernate.type.ManyToOneType(web_prak.java.classes.Supplies)
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceEntityJoin() : generating join for supply_id in web_prak.java.classes.Supplies_list (s) parent = [ {null} ]
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Supplies (s) -> supplies1_
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : d.supply_id -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=supplies,tableAlias=supplies1_,origin=supplies_list supplies_l0_,columns={supplies_l0_.supply_id,className=web_prak.java.classes.Supplies}}
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d.supply_id -> supplies_l0_.supply_id
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'supplies supplies1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=web_prak.java.classes.Supplies_list.supply_id,tableName=supplies,tableAlias=supplies1_,origin=supplies_list supplies_l0_,columns={supplies_l0_.supply_id,className=web_prak.java.classes.Supplies}}

11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d -> supplies_l0_.supplies_list_id
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s -> supplies1_.supply_id
11:49:41.116 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : supply_id -> org.hibernate.type.LongType@1d1bf7bf
11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : s.supply_id -> supplies1_.supply_id
11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} supplies_l0_.supplies_list_id ) ( FromClause{level=1} ( supplies_list supplies_l0_ supplies supplies1_ ) ) ( WHERE ( = ( supplies1_.supply_id supplies1_.supply_id supply_id ) ? ) ) )
11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Supplies_list): [supplies_list]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies_list)
    |  | originalText: d
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies)
          | path: s.supply_id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Supplies)
          |  | originalText: s
          |  \-IdentNode
          |    persister: null
          |    originalText: supply_id
          \-ParameterNode

11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [supplies_list supplies_l0_]
11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [inner join supplies supplies1_ on supplies_l0_.supply_id=supplies1_.supply_id]
11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (supplies_list,supplies)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'supplies_l0_.supplies_list_id as supplies1_7_' {alias=d, className=web_prak.java.classes.Supplies_list, tableAlias=supplies_l0_}
    |  \-[SQL_TOKEN] SqlFragment: 'supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s, d], fromElementByTableAlias=[supplies_l0_, supplies1_], fromElementsByPath=[d.supply_id], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'supplies_list supplies_l0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=supplies_list,tableAlias=supplies_l0_,origin=null,columns={,className=web_prak.java.classes.Supplies_list}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join supplies supplies1_ on supplies_l0_.supply_id=supplies1_.supply_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=web_prak.java.classes.Supplies_list.supply_id,tableName=supplies,tableAlias=supplies1_,origin=supplies_list supplies_l0_,columns={supplies_l0_.supply_id,className=web_prak.java.classes.Supplies}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'supplies1_.supply_id' {propertyName=supply_id,dereferenceType=PRIMITIVE,getPropertyPath=supply_id,path=s.supply_id,tableAlias=supplies1_,className=web_prak.java.classes.Supplies,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'supplies1_.supply_id' {alias=s, className=web_prak.java.classes.Supplies, tableAlias=supplies1_}
          |  \-[IDENT] IdentNode: 'supply_id' {originalText=supply_id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.LongType@1d1bf7bf}

11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT d FROM web_prak.java.classes.Supplies_list d JOIN d.supply_id s WHERE s.supply_id = :param
11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ inner join supplies supplies1_ on supplies_l0_.supply_id=supplies1_.supply_id where supplies1_.supply_id=?
11:49:41.117 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:41.117 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ inner join supplies supplies1_ on supplies_l0_.supply_id=supplies1_.supply_id where supplies1_.supply_id=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_, supplies_l0_.product_id as product_3_7_, supplies_l0_.quantity as quantity2_7_, supplies_l0_.supply_id as supply_i4_7_ from supplies_list supplies_l0_ inner join supplies supplies1_ on supplies_l0_.supply_id=supplies1_.supply_id where supplies1_.supply_id=?
11:49:41.118 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:41.118 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#160]
11:49:41.118 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:41.118 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Supplies_list#161]
11:49:41.118 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#160]
11:49:41.118 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 451
11:49:41.118 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:41.119 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#451]
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 565
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#451]
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#565]
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#565]
11:49:41.119 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#451
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 275
11:49:41.119 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:41.119 [Test worker] DEBUG org.hibernate.SQL - select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
Hibernate: select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
11:49:41.120 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#275]
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 292
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#275]
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#292]
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#292]
11:49:41.120 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies#275
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#160]
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#161]
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 451
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 4
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 275
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:41.120 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#161]
11:49:41.120 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.121 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.121 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.121 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.121 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.121 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.121 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.121 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.121 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.121 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#275, supplies_list_id=160, quantity=3, product_id=web_prak.java.classes.Products#451}
11:49:41.121 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:41.131 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.131 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.131 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.131 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.131 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.131 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.131 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.131 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.131 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.131 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.131 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.131 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#275, supplies_list_id=161, quantity=4, product_id=web_prak.java.classes.Products#451}
11:49:41.131 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:41.148 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.148 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.149 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.149 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.149 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.149 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.149 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.149 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.150 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.150 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.150 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.150 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=451, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#565}
11:49:41.150 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:41.165 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.165 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.165 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.165 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.165 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.166 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.166 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.166 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.166 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.166 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.166 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.166 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=565}
11:49:41.166 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:41.182 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.182 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.182 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.183 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.183 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.183 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.183 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.183 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.183 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.183 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.183 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.184 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=275, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#292, status=в процессе}
11:49:41.184 [Test worker] DEBUG org.hibernate.SQL - delete from supplies where supply_id=?
Hibernate: delete from supplies where supply_id=?
11:49:41.198 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.199 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.199 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.199 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.199 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.199 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.199 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.199 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.200 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.200 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.200 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.200 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=292, email=wokker0@infoseek.co.jp}
11:49:41.200 [Test worker] DEBUG org.hibernate.SQL - delete from suppliers where supplier_id=?
Hibernate: delete from suppliers where supplier_id=?
11:49:41.216 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.216 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.216 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.218 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.218 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.218 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.218 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:41.219 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 566
11:49:41.219 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.220 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.220 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.220 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.220 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.220 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.220 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.220 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=566}
11:49:41.232 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.232 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.232 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.232 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.233 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.233 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:41.235 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 452
11:49:41.235 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.235 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.235 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.235 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.236 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.236 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.236 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.236 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=452, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#566}
11:49:41.249 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.249 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.250 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.250 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.250 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.250 [Test worker] DEBUG org.hibernate.SQL - insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
Hibernate: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:41.251 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 293
11:49:41.251 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.252 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.252 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.252 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.252 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.252 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.252 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.252 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=293, email=wokker0@infoseek.co.jp}
11:49:41.265 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.266 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.266 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.266 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.266 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.266 [Test worker] DEBUG org.hibernate.SQL - insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
Hibernate: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:41.268 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 276
11:49:41.268 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.269 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.269 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.269 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.269 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.269 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.269 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.269 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=276, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#293, status=в процессе}
11:49:41.283 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.283 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.283 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.283 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.283 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:41.284 [Test worker] DEBUG org.hibernate.SQL - insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
Hibernate: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:41.285 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 162
11:49:41.285 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:41.285 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.285 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.285 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.285 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:41.285 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.285 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.286 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#276, supplies_list_id=162, quantity=3, product_id=web_prak.java.classes.Products#452}
11:49:41.299 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.299 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.300 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
11:49:41.303 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:41.304 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#162]
11:49:41.304 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 452
11:49:41.304 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 3
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 276
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#162]
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#452]
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 566
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#452]
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#566]
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:41.305 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#566]
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#276]
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 293
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#276]
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#293]
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:41.306 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#293]
11:49:41.306 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies_list#162
11:49:41.306 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.307 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.307 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.308 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.308 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.308 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.308 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
11:49:41.308 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.308 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.308 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#276, supplies_list_id=162, quantity=5, product_id=web_prak.java.classes.Products#452}
11:49:41.308 [Test worker] DEBUG org.hibernate.SQL - update supplies_list set product_id=?, quantity=?, supply_id=? where supplies_list_id=?
Hibernate: update supplies_list set product_id=?, quantity=?, supply_id=? where supplies_list_id=?
11:49:41.327 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.327 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.327 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.328 [Test worker] DEBUG org.hibernate.SQL - select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
Hibernate: select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
11:49:41.330 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies_list#162]
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_id` : value = 452
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_id`)  - enhanced for lazy-loading? - false
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supply_id` : value = 276
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supply_id`)  - enhanced for lazy-loading? - false
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies_list#162]
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#452]
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 566
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:41.332 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#452]
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#566]
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#566]
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Supplies#276]
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `data_supply` : value = 2022-01-05
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`data_supply`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `status` : value = в процессе
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `store_period` : value = 120
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`store_period`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_id` : value = 293
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_id`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Supplies#276]
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Suppliers#293]
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = улица Пятницкая, д27
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (926) 059-17-93
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = wokker0@infoseek.co.jp
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `supplier_name` : value = Казакова Алиса
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`supplier_name`)  - enhanced for lazy-loading? - false
11:49:41.333 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Suppliers#293]
11:49:41.334 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Supplies_list#162
11:49:41.334 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.335 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.335 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.335 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.335 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.335 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.335 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.335 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.335 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.335 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies_list{supply_id=web_prak.java.classes.Supplies#276, supplies_list_id=162, quantity=5, product_id=web_prak.java.classes.Products#452}
11:49:41.336 [Test worker] DEBUG org.hibernate.SQL - delete from supplies_list where supplies_list_id=?
Hibernate: delete from supplies_list where supplies_list_id=?
11:49:41.354 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.354 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.354 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.355 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.355 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.355 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.355 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.355 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.355 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.355 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.355 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.355 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=452, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#566}
11:49:41.355 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:41.372 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.372 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.372 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.372 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.372 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.372 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.372 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.372 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.372 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.372 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.372 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.372 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=566}
11:49:41.372 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:41.388 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.388 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.388 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.388 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.388 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.389 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.389 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.389 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.389 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.389 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.389 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.389 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Supplies{supply_id=276, data_supply=2022-01-05, store_period=120, supplier_id=web_prak.java.classes.Suppliers#293, status=в процессе}
11:49:41.389 [Test worker] DEBUG org.hibernate.SQL - delete from supplies where supply_id=?
Hibernate: delete from supplies where supply_id=?
11:49:41.405 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.405 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.405 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:41.406 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:41.406 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:41.406 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:41.406 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:41.406 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:41.406 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:41.406 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:41.406 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:41.406 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Suppliers{address=улица Пятницкая, д27, contact=+7 (926) 059-17-93, supplier_name=Казакова Алиса, supplier_id=293, email=wokker0@infoseek.co.jp}
11:49:41.406 [Test worker] DEBUG org.hibernate.SQL - delete from suppliers where supplier_id=?
Hibernate: delete from suppliers where supplier_id=?
11:49:41.422 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.422 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:41.422 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
