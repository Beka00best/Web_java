<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ClientsTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2022-04-04T08:49:28" hostname="bekzat-Lenovo-Legion-Y530-15ICH" time="2.602">
  <properties/>
  <testcase name="testCreateNewClient" classname="ClientsTest" time="2.158"/>
  <testcase name="testDeleteClient" classname="ClientsTest" time="0.034"/>
  <testcase name="testGetClientAll" classname="ClientsTest" time="0.246"/>
  <testcase name="testGetClientById" classname="ClientsTest" time="0.033"/>
  <testcase name="testGetClientByName" classname="ClientsTest" time="0.078"/>
  <testcase name="testUpdateClient" classname="ClientsTest" time="0.05"/>
  <system-out><![CDATA[11:49:28.280 [Test worker] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
11:49:28.288 [Test worker] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
11:49:28.290 [Test worker] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
11:49:28.294 [Test worker] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
11:49:28.324 [Test worker] INFO org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.5.Final
11:49:28.326 [Test worker] DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
11:49:28.530 [Test worker] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
11:49:28.531 [Test worker] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
11:49:28.537 [Test worker] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
11:49:28.763 [Test worker] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
11:49:28.763 [Test worker] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
11:49:28.764 [Test worker] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
11:49:28.771 [Test worker] DEBUG org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
11:49:28.771 [Test worker] DEBUG org.hibernate.cfg.Configuration - Building session factory using provided StandardServiceRegistry
11:49:28.781 [Test worker] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
11:49:28.782 [Test worker] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
11:49:28.803 [Test worker] INFO org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
11:49:28.834 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1c68d0db
11:49:28.834 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1c68d0db
11:49:28.834 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c68d0db
11:49:28.835 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@629b780f
11:49:28.836 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6734ff92
11:49:28.837 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6775c0d1
11:49:28.838 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@53bb71e5
11:49:28.838 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@53bb71e5
11:49:28.838 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@53bb71e5
11:49:28.839 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@19b9f903
11:49:28.839 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@19b9f903
11:49:28.839 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@19b9f903
11:49:28.841 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4b476233
11:49:28.841 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4b476233
11:49:28.841 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4b476233
11:49:28.842 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7d8b66d9
11:49:28.842 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7d8b66d9
11:49:28.842 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7d8b66d9
11:49:28.844 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1d1bf7bf
11:49:28.844 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1d1bf7bf
11:49:28.844 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d1bf7bf
11:49:28.845 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75ad30c1
11:49:28.845 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75ad30c1
11:49:28.845 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75ad30c1
11:49:28.846 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a6da47a
11:49:28.846 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a6da47a
11:49:28.846 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a6da47a
11:49:28.848 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@49ced9c7
11:49:28.848 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@49ced9c7
11:49:28.849 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@59a09be
11:49:28.849 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@59a09be
11:49:28.850 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2b170932
11:49:28.850 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b170932
11:49:28.851 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5dfc2a4
11:49:28.851 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c2b6acb
11:49:28.852 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@49038f97
11:49:28.852 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@49038f97
11:49:28.853 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@61808ecd
11:49:28.854 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@61808ecd
11:49:28.857 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@60dcf9ec
11:49:28.857 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60dcf9ec
11:49:28.858 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35e2b89f
11:49:28.858 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35e2b89f
11:49:28.859 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7b1a30e5
11:49:28.859 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7b1a30e5
11:49:28.860 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2cbe455c
11:49:28.860 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2cbe455c
11:49:28.861 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b5c902
11:49:28.862 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b5c902
11:49:28.863 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59ec7020
11:49:28.863 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59ec7020
11:49:28.865 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c5747db
11:49:28.865 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c5747db
11:49:28.867 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@64bba0eb
11:49:28.867 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@64bba0eb
11:49:28.869 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@25de8898
11:49:28.869 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@25de8898
11:49:28.871 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2b098563
11:49:28.871 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2b098563
11:49:28.872 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2b098563
11:49:28.878 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@74f4a2ba
11:49:28.881 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3ea48c37
11:49:28.881 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ea48c37
11:49:28.881 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ea48c37
11:49:28.884 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@36df4c26
11:49:28.885 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1fcaea93
11:49:28.886 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1f172892
11:49:28.886 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f172892
11:49:28.887 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@59e082f8
11:49:28.887 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59e082f8
11:49:28.888 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@45cd8607
11:49:28.888 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45cd8607
11:49:28.889 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@19bf47fc
11:49:28.889 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19bf47fc
11:49:28.890 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66f2ec1c
11:49:28.890 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66f2ec1c
11:49:28.891 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5a4c98d7
11:49:28.892 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2084e65a
11:49:28.892 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2084e65a
11:49:28.892 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2084e65a
11:49:28.893 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14874a5d
11:49:28.893 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14874a5d
11:49:28.894 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14874a5d
11:49:28.897 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3eac2e8a
11:49:28.898 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1805383
11:49:28.899 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@184751f3
11:49:28.899 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@184751f3
11:49:28.899 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@184751f3
11:49:28.900 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5cdf221a
11:49:28.901 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5cdf221a
11:49:28.901 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5cdf221a
11:49:28.901 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@738a815c
11:49:28.902 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7e77678c
11:49:28.903 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@236861da
11:49:28.903 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@236861da
11:49:28.904 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7534785a
11:49:28.906 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7b44bfb8
11:49:28.906 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b44bfb8
11:49:28.907 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@605c7a9e
11:49:28.908 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@605c7a9e
11:49:28.908 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6d815fb7
11:49:28.909 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@40016ce1
11:49:28.910 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@8432469
11:49:28.913 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5563bb40
11:49:28.913 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5563bb40
11:49:28.914 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7bb4ed71
11:49:28.914 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5112b7
11:49:28.914 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@56835f2f
11:49:28.914 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40f1aa95
11:49:28.914 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c72189f
11:49:28.914 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@14be750c
11:49:28.914 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@58882a93
11:49:28.914 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15e08615
11:49:28.945 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
11:49:28.945 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
11:49:28.946 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
11:49:28.946 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
11:49:28.947 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
11:49:28.947 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
11:49:28.948 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
11:49:28.950 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
11:49:28.951 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
11:49:28.952 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
11:49:28.953 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
11:49:28.953 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
11:49:28.953 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
11:49:28.955 [Test worker] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
11:49:28.959 [Test worker] WARN org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
11:49:28.965 [Test worker] INFO org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/warehouse_accounting_db]
11:49:28.966 [Test worker] INFO org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=password, user=bekzat}
11:49:28.966 [Test worker] INFO org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
11:49:28.968 [Test worker] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
11:49:28.969 [Test worker] INFO org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
11:49:29.228 [Test worker] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4 (Ubuntu 13.4-1.pgdg18.04+1)
      major : 13
      minor : 4
11:49:29.228 [Test worker] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
11:49:29.228 [Test worker] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
11:49:29.241 [Test worker] INFO org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
11:49:29.254 [Test worker] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
11:49:29.296 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2ba08f26
11:49:29.297 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2ba08f26
11:49:29.297 [Test worker] DEBUG org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@66f2ec1c
11:49:29.299 [Test worker] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53dbe7b2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@520ec7a7]
11:49:29.340 [Test worker] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
11:49:29.360 [Test worker] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: web_prak.java.classes.Clients
11:49:29.383 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:49:29.387 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Clients
11:49:29.389 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity web_prak.java.classes.Clients on table clients
11:49:29.407 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
11:49:29.410 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Clients] is safe
11:49:29.410 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Clients
11:49:29.410 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property client_id with lazy=false
11:49:29.413 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Clients:client_id]
11:49:29.415 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for client_id
11:49:29.417 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property client_id
11:49:29.420 [Test worker] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(client_id)]), client_id, identity, , ...)
11:49:29.420 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=address, insertable=true, updatable=true, unique=false}
11:49:29.421 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property address with lazy=false
11:49:29.421 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Clients:address]
11:49:29.421 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for address
11:49:29.421 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property address
11:49:29.421 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=client_name, insertable=true, updatable=true, unique=false}
11:49:29.421 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property client_name with lazy=false
11:49:29.421 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Clients:client_name]
11:49:29.421 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for client_name
11:49:29.421 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property client_name
11:49:29.422 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=contact, insertable=true, updatable=true, unique=false}
11:49:29.422 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property contact with lazy=false
11:49:29.422 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Clients:contact]
11:49:29.422 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for contact
11:49:29.422 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property contact
11:49:29.422 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=false}
11:49:29.422 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property email with lazy=false
11:49:29.422 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Clients:email]
11:49:29.422 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for email
11:49:29.422 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property email
11:49:29.428 [Test worker] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: web_prak.java.classes.Deliveries
11:49:29.428 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:49:29.428 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Deliveries
11:49:29.428 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity web_prak.java.classes.Deliveries on table deliveries
11:49:29.432 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deliveries), mappingColumn=delivery_id, insertable=true, updatable=true, unique=false}
11:49:29.432 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Deliveries] is safe
11:49:29.432 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Deliveries
11:49:29.432 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property delivery_id with lazy=false
11:49:29.433 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Deliveries:delivery_id]
11:49:29.433 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for delivery_id
11:49:29.433 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property delivery_id
11:49:29.433 [Test worker] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(delivery_id)]), delivery_id, identity, , ...)
11:49:29.434 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
11:49:29.435 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deliveries), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
11:49:29.438 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property client_id
11:49:29.439 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deliveries), mappingColumn=date_issue, insertable=true, updatable=true, unique=false}
11:49:29.439 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property date_issue with lazy=false
11:49:29.439 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Deliveries:date_issue]
11:49:29.439 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for date_issue
11:49:29.439 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property date_issue
11:49:29.439 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deliveries), mappingColumn=status, insertable=true, updatable=true, unique=false}
11:49:29.439 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property status with lazy=false
11:49:29.439 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Deliveries:status]
11:49:29.439 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for status
11:49:29.439 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property status
11:49:29.440 [Test worker] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: web_prak.java.classes.Deliveries_list
11:49:29.440 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:49:29.440 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Deliveries_list
11:49:29.440 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity web_prak.java.classes.Deliveries_list on table deliveries_list
11:49:29.441 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deliveries_list), mappingColumn=deliveries_list_id, insertable=true, updatable=true, unique=false}
11:49:29.441 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Deliveries_list] is safe
11:49:29.441 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Deliveries_list
11:49:29.442 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property deliveries_list_id with lazy=false
11:49:29.442 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Deliveries_list:deliveries_list_id]
11:49:29.442 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for deliveries_list_id
11:49:29.442 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property deliveries_list_id
11:49:29.442 [Test worker] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(deliveries_list_id)]), deliveries_list_id, identity, , ...)
11:49:29.442 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='delivery_id', referencedColumn='', mappedBy=''}
11:49:29.442 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deliveries_list), mappingColumn=delivery_id, insertable=true, updatable=true, unique=false}
11:49:29.442 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property delivery_id
11:49:29.442 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='product_id', referencedColumn='', mappedBy=''}
11:49:29.443 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deliveries_list), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
11:49:29.443 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property product_id
11:49:29.443 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deliveries_list), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
11:49:29.443 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
11:49:29.443 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Deliveries_list:quantity]
11:49:29.443 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for quantity
11:49:29.443 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property quantity
11:49:29.444 [Test worker] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: web_prak.java.classes.Products
11:49:29.444 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:49:29.444 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Products
11:49:29.444 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity web_prak.java.classes.Products on table products
11:49:29.445 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
11:49:29.445 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Products] is safe
11:49:29.445 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Products
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property product_id with lazy=false
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Products:product_id]
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for product_id
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property product_id
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(product_id)]), product_id, identity, , ...)
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=expiration_date_from, insertable=true, updatable=true, unique=false}
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property expiration_date_from with lazy=false
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Products:expiration_date_from]
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for expiration_date_from
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property expiration_date_from
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=expiration_date_to, insertable=true, updatable=true, unique=false}
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property expiration_date_to with lazy=false
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Products:expiration_date_to]
11:49:29.446 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for expiration_date_to
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property expiration_date_to
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=measure, insertable=true, updatable=true, unique=false}
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property measure with lazy=false
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Products:measure]
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for measure
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property measure
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='place_id', referencedColumn='', mappedBy=''}
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=place_id, insertable=true, updatable=true, unique=false}
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property place_id
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=product_name, insertable=true, updatable=true, unique=false}
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property product_name with lazy=false
11:49:29.447 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Products:product_name]
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for product_name
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property product_name
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Products:quantity]
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for quantity
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property quantity
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=type, insertable=true, updatable=true, unique=false}
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property type with lazy=false
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Products:type]
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for type
11:49:29.448 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property type
11:49:29.449 [Test worker] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: web_prak.java.classes.Register_place
11:49:29.449 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:49:29.449 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Register_place
11:49:29.449 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity web_prak.java.classes.Register_place on table register_place
11:49:29.450 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(register_place), mappingColumn=place_id, insertable=true, updatable=true, unique=false}
11:49:29.450 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Register_place] is safe
11:49:29.450 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Register_place
11:49:29.450 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property place_id with lazy=false
11:49:29.450 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Register_place:place_id]
11:49:29.450 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for place_id
11:49:29.451 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property place_id
11:49:29.451 [Test worker] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(place_id)]), place_id, identity, , ...)
11:49:29.451 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(register_place), mappingColumn=free, insertable=true, updatable=true, unique=false}
11:49:29.451 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property free with lazy=false
11:49:29.451 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Register_place:free]
11:49:29.451 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for free
11:49:29.451 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property free
11:49:29.451 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(register_place), mappingColumn=storage_location, insertable=true, updatable=true, unique=false}
11:49:29.451 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property storage_location with lazy=false
11:49:29.452 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Register_place:storage_location]
11:49:29.452 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for storage_location
11:49:29.452 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property storage_location
11:49:29.452 [Test worker] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: web_prak.java.classes.Suppliers
11:49:29.452 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:49:29.452 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Suppliers
11:49:29.452 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity web_prak.java.classes.Suppliers on table suppliers
11:49:29.453 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(suppliers), mappingColumn=supplier_id, insertable=true, updatable=true, unique=false}
11:49:29.454 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Suppliers] is safe
11:49:29.454 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Suppliers
11:49:29.454 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property supplier_id with lazy=false
11:49:29.454 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Suppliers:supplier_id]
11:49:29.454 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for supplier_id
11:49:29.454 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property supplier_id
11:49:29.454 [Test worker] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(supplier_id)]), supplier_id, identity, , ...)
11:49:29.454 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(suppliers), mappingColumn=address, insertable=true, updatable=true, unique=false}
11:49:29.454 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property address with lazy=false
11:49:29.454 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Suppliers:address]
11:49:29.454 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for address
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property address
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(suppliers), mappingColumn=contact, insertable=true, updatable=true, unique=false}
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property contact with lazy=false
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Suppliers:contact]
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for contact
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property contact
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(suppliers), mappingColumn=email, insertable=true, updatable=true, unique=false}
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property email with lazy=false
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Suppliers:email]
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for email
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property email
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(suppliers), mappingColumn=supplier_name, insertable=true, updatable=true, unique=false}
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property supplier_name with lazy=false
11:49:29.455 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Suppliers:supplier_name]
11:49:29.456 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for supplier_name
11:49:29.456 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property supplier_name
11:49:29.456 [Test worker] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: web_prak.java.classes.Supplies
11:49:29.456 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:49:29.456 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Supplies
11:49:29.456 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity web_prak.java.classes.Supplies on table supplies
11:49:29.457 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(supplies), mappingColumn=supply_id, insertable=true, updatable=true, unique=false}
11:49:29.457 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Supplies] is safe
11:49:29.457 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Supplies
11:49:29.457 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property supply_id with lazy=false
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Supplies:supply_id]
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for supply_id
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property supply_id
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(supply_id)]), supply_id, identity, , ...)
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(supplies), mappingColumn=data_supply, insertable=true, updatable=true, unique=false}
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property data_supply with lazy=false
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Supplies:data_supply]
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for data_supply
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property data_supply
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(supplies), mappingColumn=status, insertable=true, updatable=true, unique=false}
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property status with lazy=false
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Supplies:status]
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for status
11:49:29.458 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property status
11:49:29.459 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(supplies), mappingColumn=store_period, insertable=true, updatable=true, unique=false}
11:49:29.459 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property store_period with lazy=false
11:49:29.459 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Supplies:store_period]
11:49:29.459 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for store_period
11:49:29.459 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property store_period
11:49:29.459 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='supplier_id', referencedColumn='', mappedBy=''}
11:49:29.459 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(supplies), mappingColumn=supplier_id, insertable=true, updatable=true, unique=false}
11:49:29.459 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property supplier_id
11:49:29.460 [Test worker] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: web_prak.java.classes.Supplies_list
11:49:29.460 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
11:49:29.460 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Import with entity name Supplies_list
11:49:29.460 [Test worker] DEBUG org.hibernate.cfg.annotations.EntityBinder - Bind entity web_prak.java.classes.Supplies_list on table supplies_list
11:49:29.461 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(supplies_list), mappingColumn=supplies_list_id, insertable=true, updatable=true, unique=false}
11:49:29.461 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Supplies_list] is safe
11:49:29.462 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Supplies_list
11:49:29.462 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property supplies_list_id with lazy=false
11:49:29.462 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Supplies_list:supplies_list_id]
11:49:29.462 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for supplies_list_id
11:49:29.462 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property supplies_list_id
11:49:29.462 [Test worker] DEBUG org.hibernate.cfg.BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(supplies_list_id)]), supplies_list_id, identity, , ...)
11:49:29.462 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='product_id', referencedColumn='', mappedBy=''}
11:49:29.462 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(supplies_list), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
11:49:29.463 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property product_id
11:49:29.463 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(supplies_list), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
11:49:29.463 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
11:49:29.463 [Test worker] DEBUG org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [web_prak.java.classes.Supplies_list:quantity]
11:49:29.463 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for quantity
11:49:29.463 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property quantity
11:49:29.463 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='supply_id', referencedColumn='', mappedBy=''}
11:49:29.463 [Test worker] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(supplies_list), mappingColumn=supply_id, insertable=true, updatable=true, unique=false}
11:49:29.463 [Test worker] DEBUG org.hibernate.cfg.annotations.PropertyBinder - Building property supply_id
11:49:29.464 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for client_id
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for address
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for client_name
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for contact
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for email
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for delivery_id
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for date_issue
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for status
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for deliveries_list_id
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for quantity
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for product_id
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for expiration_date_from
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for expiration_date_to
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for measure
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for product_name
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for quantity
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for type
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for place_id
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for free
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for storage_location
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for supplier_id
11:49:29.465 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for address
11:49:29.466 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for contact
11:49:29.466 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for email
11:49:29.466 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for supplier_name
11:49:29.466 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for supply_id
11:49:29.466 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for data_supply
11:49:29.466 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for status
11:49:29.466 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for store_period
11:49:29.466 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for supplies_list_id
11:49:29.466 [Test worker] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for quantity
11:49:29.470 [Test worker] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [client_id] to be non-null as it is part of the primary key for table [clients]
11:49:29.470 [Test worker] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [delivery_id] to be non-null as it is part of the primary key for table [deliveries]
11:49:29.471 [Test worker] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [deliveries_list_id] to be non-null as it is part of the primary key for table [deliveries_list]
11:49:29.471 [Test worker] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [product_id] to be non-null as it is part of the primary key for table [products]
11:49:29.471 [Test worker] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [place_id] to be non-null as it is part of the primary key for table [register_place]
11:49:29.471 [Test worker] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [supplier_id] to be non-null as it is part of the primary key for table [suppliers]
11:49:29.471 [Test worker] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [supply_id] to be non-null as it is part of the primary key for table [supplies]
11:49:29.471 [Test worker] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [supplies_list_id] to be non-null as it is part of the primary key for table [supplies_list]
11:49:29.472 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Clients
11:49:29.474 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Deliveries
11:49:29.474 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Products
11:49:29.475 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Register_place
11:49:29.475 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Suppliers
11:49:29.475 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Products
11:49:29.475 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Supplies
11:49:29.476 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Clients
11:49:29.476 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Deliveries
11:49:29.476 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Products
11:49:29.476 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Register_place
11:49:29.476 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Suppliers
11:49:29.476 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Products
11:49:29.476 [Test worker] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: web_prak.java.classes.Supplies
11:49:29.514 [Test worker] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
11:49:29.515 [Test worker] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 15
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): enabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : disabled
11:49:29.516 [Test worker] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : disabled
11:49:29.590 [Test worker] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
11:49:29.591 [Test worker] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
11:49:29.605 [Test worker] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
11:49:29.605 [Test worker] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, org.gradle.test.worker=5, java.class.path=/home/bekzat/.gradle/caches/7.4.1/workerMain/gradle-worker.jar:/home/bekzat/Beka/Web_java/build/classes/java/test:/home/bekzat/Beka/Web_java/build/classes/java/main:/home/bekzat/Beka/Web_java/build/resources/main:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-web/2.6.4/4aa74a41a8ff99e256433805b0ee63a6053d6b6c/spring-boot-starter-web-2.6.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/5.3.16/74e2e8227522a9f369b266b66fd71bf416d04a2f/spring-orm-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.projectlombok/lombok/1.18.22/9c08ea24c6eb714e2d6170e8122c069a0ba9aacf/lombok-1.18.22.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.hibernate/hibernate-core/5.6.5.Final/d5c41d9018d16ca6076726f0f037ba8a0ebc0cb4/hibernate-core-5.6.5.Final.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.postgresql/postgresql/42.3.3/6f639af368afda4c5a3e77a6299262c501e67076/postgresql-42.3.3.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.testng/testng/7.5/1416a607fae667c14e390b484e8d02b5824c0674/testng-7.5.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-test/2.6.4/4befb5f23c4bac74125d1c9e4f3721586b315d3a/spring-boot-starter-test-2.6.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-json/2.6.4/9aa13f5bd6e09510d89ec3874118f027613a9565/spring-boot-starter-json-2.6.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter/2.6.4/31adf5f726b6a5703815b99056110b96db7eff58/spring-boot-starter-2.6.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-tomcat/2.6.4/7f5937c60c8f556402e4970c4bb657f92b653f2b/spring-boot-starter-tomcat-2.6.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.16/18e0d7a9cf1c43b100296f86f61b58821dd1e6b9/spring-webmvc-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/5.3.16/224ae9b45e138034980a423e2f85d7bd63539a49/spring-web-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/5.3.16/456645153d6a5ed62b3d27750ee1b3c34b460b71/spring-jdbc-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/5.3.16/ae9be43379f2967e015ace189d47728a99f18220/spring-tx-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-test-autoconfigure/2.6.4/fe1ab93aa3ca84e50d0f470a17468a8e7e2770e3/spring-boot-test-autoconfigure-2.6.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-test/2.6.4/f7669dafbe66e2805349049c090d9cbca974fbd5/spring-boot-test-2.6.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/2.6.4/36e75a2781fc604ac042945eed8be2fe049731df/spring-boot-autoconfigure-2.6.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/2.6.4/356c0ee25794ca46d8344d13cffbc30bfae1dc0e/spring-boot-2.6.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/5.3.16/efb9c749b335bf62dc07c1674e9d76d382a027e5/spring-context-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/5.3.16/d61c0545e0395de608be52db1cccb60ba841a26b/spring-aop-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/5.3.16/15decec5cea7a91423272daaae6f5d050c23cf3b/spring-beans-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-test/5.3.16/eba2a6612c3bb86cc71b31c731cb46164309f796/spring-test-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/5.3.16/831a17ce70686c571f3c05c4bcfb81012c5814df/spring-expression-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/5.3.16/db1b277cd548c725144580dda8703ce179fb3769/spring-core-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/5.1.2.Final/e59ffdbc6ad09eeb33507b39ffcf287679a498c8/hibernate-commons-annotations-5.1.2.Final.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.4.3.Final/c4bd7e12a745c0e7f6cf98c45cdcdf482fd827ea/jboss-logging-3.4.3.Final.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/javax.persistence/javax.persistence-api/2.2/25665ac8c0b62f50e6488173233239120fc52c96/javax.persistence-api-2.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-junit-jupiter/4.0.0/b76de25bd6e5d8f7924d0536729c0076e37e9396/mockito-junit-jupiter-4.0.0.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/4.0.0/f5195e0c4a45716bbd2d1d29173adbd148acce3a/mockito-core-4.0.0.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.11.22/8b4c7fa5562a09da1c2a9ab0873cb51f5034d83f/byte-buddy-1.11.22.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/antlr/antlr/2.7.7/83cd2cd674a217ade95a4bb83a8a14f351f48bd0/antlr-2.7.7.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.jboss.spec.javax.transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/a8485cab9484dda36e9a8c319e76b5cc18797b58/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.jboss/jandex/2.4.2.Final/1e1c385990b258ff1a24c801e84aebbacf70eb39/jandex-2.4.2.Final.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/javax.xml.bind/jaxb-api/2.3.1/8531ad5ac454cc2deb9d4d32c40c4d7451939b5d/jaxb-api-2.3.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/javax.activation/javax.activation-api/1.2.0/85262acf3ca9816f9537ca47d5adeabaead7cb16/javax.activation-api-1.2.0.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/2.3.6/1e6cd0e5d9f9919c8c8824fb4d310b09a978a60e/jaxb-runtime-2.3.6.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.checkerframework/checker-qual/3.5.0/2f50520c8abea66fbd8d26e481d3aef5c673b510/checker-qual-3.5.0.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.1/f7be08ec23c21485b9b5a1cf1654c2ec8c58168d/jsr305-3.0.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.jayway.jsonpath/json-path/2.6.0/67f565b424f7903a12d4f5b9361b11462ecacdac/json-path-2.6.0.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-logging/2.6.4/e8bab752fd29797df304ef2ad8575e5392d96c4c/spring-boot-starter-logging-2.6.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.2.10/f69d97ef3335c6ab82fc21dfb77ac613f90c1221/logback-classic-1.2.10.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.17.1/3619fd18278a1a895c1dca8c5be002768071a20e/log4j-to-slf4j-2.17.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/1.7.36/ed46d81cef9c412a88caef405b58f93a678ff2ca/jul-to-slf4j-1.7.36.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.36/6c62681a2f655b49963a5983b8b0950a6120ae14/slf4j-api-1.7.36.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.beust/jcommander/1.78/a3927de9bd6f351429bcf763712c9890629d8f51/jcommander-1.78.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.webjars/jquery/3.5.1/2392938e374f561c27c53872bdc9b6b351b6ba34/jquery-3.5.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/2.3.3/48e3b9cfc10752fba3521d6511f4165bea951801/jakarta.xml.bind-api-2.3.3.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-core/3.21.0/27a14d6d22c4e3d58f799fb2a5ca8eaf53e6942a/assertj-core-3.21.0.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest/2.2/1820c0968dba3a11a1b30669bb1f01978a91dedc/hamcrest-2.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-params/5.8.2/ddeafe92fc263f895bfb73ffeca7fd56e23c2cce/junit-jupiter-params-5.8.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-engine/5.8.2/c598b4328d2f397194d11df3b1648d68d7d990e3/junit-jupiter-engine-5.8.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-api/5.8.2/4c21029217adf07e4c0d0c5e192b6bf610c94bdc/junit-jupiter-api-5.8.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.8.2/b737de09f19864bd136805c84df7999a142fec29/junit-platform-engine-1.8.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.8.2/32c8b8617c1342376fd5af2053da6410d8866861/junit-platform-commons-1.8.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter/5.8.2/5a817b1e63f1217e5c586090c45e681281f097ad/junit-jupiter-5.8.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.skyscreamer/jsonassert/1.5.0/6c9d5fe2f59da598d9aefc1cfc6528ff3cf32df3/jsonassert-1.5.0.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.xmlunit/xmlunit-core/2.8.4/35be57989ca80eefa03161b211630e319a8f36c6/xmlunit-core-2.8.4.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/1.3.5/59eb84ee0d616332ff44aba065f3888cf002cd2d/jakarta.annotation-api-1.3.5.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.29/6d0cdafb2010f1297e574656551d7145240f6e25/snakeyaml-1.29.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.13.1/1ece5a87b59701328215e0083448b4d451857cbd/jackson-datatype-jsr310-2.13.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.13.1/cbeec2259213c555ef451a2e05f35ed1dbfbf799/jackson-module-parameter-names-2.13.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.13.1/1cbcbe4623113e6af92ccaa89884a345270f1a87/jackson-annotations-2.13.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.13.1/51ae921a2ed1e06ca8876f12f32f265e83c0b2b8/jackson-core-2.13.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.13.1/8ecfa9bcd714269fdf22c33f9fd00d0643bd0e21/jackson-datatype-jdk8-2.13.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.13.1/698b2d2b15d9a1b7aae025f1d9f576842285e7f6/jackson-databind-2.13.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/9.0.58/be15775c1abc7fd9b8fda38a8991463e04de656f/tomcat-embed-websocket-9.0.58.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/9.0.58/5166fd9f6ffef571c22265c84a0b4354a835d4d2/tomcat-embed-core-9.0.58.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/9.0.58/a82095439a98c29b3d7eb136e76e0283bf3f005f/tomcat-embed-el-9.0.58.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/5.3.16/18d422952e0ce534c2b0ac8b47176c2432fb7e78/spring-jcl-5.3.16.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/2.3.6/45db7b69a8f1ec2c21eb7d4fc0ee729f53c1addc/txw2-2.3.6.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/3.0.12/cbbe1a62b0cc6c85972e99d52aaee350153dc530/istack-commons-runtime-3.0.12.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.sun.activation/jakarta.activation/1.2.2/74548703f9851017ce2f556066659438019e7eb5/jakarta.activation-1.2.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/net.minidev/json-smart/2.4.8/7c62f5f72ab05eb54d40e2abf0360a2fe9ea477f/json-smart-2.4.8.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/1.2.2/99f53adba383cb1bf7c3862844488574b559621f/jakarta.activation-api-1.2.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy-agent/1.11.22/2fbcf3210dfc09b42242e3b66a5281cc5b9adb80/byte-buddy-agent-1.11.22.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.objenesis/objenesis/3.2/7fadf57620c8b8abdf7519533e5527367cb51f09/objenesis-3.2.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/net.minidev/accessors-smart/2.4.8/6e1bee5a530caba91893604d6ab41d0edcecca9a/accessors-smart-2.4.8.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.2.0/28c11eb91f9b6d8e200631d46e20a7f407f2a046/opentest4j-1.2.0.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.2.10/5328406bfcae7bcdcc86810fcb2920d2c297170d/logback-core-1.2.10.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.17.1/d771af8e336e372fb5399c99edabe0919aeaf5b2/log4j-api-2.17.1.jar:/home/bekzat/.gradle/caches/modules-2/files-2.1/org.ow2.asm/asm/9.1/a99500cf6eea30535eeac6be73899d048f8d12a8/asm-9.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=17, os.name=Linux, current_session_context_class=thread, user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/home/bekzat/.jdks/openjdk-17.0.2/lib, sun.java.command=worker.org.gradle.process.internal.worker.GradleWorkerMain 'Gradle Test Executor 5', jdk.debug=release, sun.cpu.endian=little, user.home=/home/bekzat, user.language=ru, java.specification.vendor=Oracle Corporation, org.gradle.native=false, java.version.date=2022-01-18, java.home=/home/bekzat/.jdks/openjdk-17.0.2, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, connection.password=password, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=bekzat, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-105-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/warehouse_accounting_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/tmp, java.version=17.0.2, user.dir=/home/bekzat/Beka/Web_java, os.arch=amd64, connection.username=bekzat, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, org.gradle.internal.worker.tmpdir=/home/bekzat/Beka/Web_java/build/tmp/test/work, connection.driver_class=org.postgresql.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ce8b59e, native.encoding=UTF-8, java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:postgresql://localhost:5432/warehouse_accounting_db, java.class.version=61.0}
11:49:29.629 [Test worker] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
11:49:29.630 [Test worker] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
11:49:29.631 [Test worker] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53dbe7b2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1c0a143]
11:49:29.694 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries_list#delivery_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.700 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries_list#delivery_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.700 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries_list#product_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.700 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries_list#product_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.700 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Deliveries_list] is safe
11:49:29.701 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Deliveries_list
11:49:29.894 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries_list#delivery_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.894 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries_list#product_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.895 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries_list#delivery_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.895 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries_list#product_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.898 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries#client_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.899 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries#client_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.900 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Deliveries] is safe
11:49:29.901 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Deliveries
11:49:29.916 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries#client_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.917 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Deliveries#client_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.917 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Products#place_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.917 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Products#place_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.917 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Products] is safe
11:49:29.917 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Products
11:49:29.936 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Products#place_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.936 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Products#place_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.937 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Suppliers] is safe
11:49:29.937 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Suppliers
11:49:29.952 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Clients] is safe
11:49:29.952 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Clients
11:49:29.966 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies#supplier_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.966 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies#supplier_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.966 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Supplies] is safe
11:49:29.966 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Supplies
11:49:29.979 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies#supplier_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.979 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies#supplier_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.980 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Register_place] is safe
11:49:29.980 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Register_place
11:49:29.990 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies_list#product_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.991 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies_list#product_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.991 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies_list#supply_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.991 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies_list#supply_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:29.991 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [web_prak.java.classes.Supplies_list] is safe
11:49:29.991 [Test worker] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : web_prak.java.classes.Supplies_list
11:49:30.000 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies_list#product_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:30.000 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies_list#supply_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:30.000 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies_list#product_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:30.000 [Test worker] DEBUG org.hibernate.orm.bytecode.interceptor - To-one property `web_prak.java.classes.Supplies_list#supply_id` was mapped with LAZY + NO_PROXY but the class was not enhanced
11:49:30.007 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: web_prak.java.classes.Deliveries_list
11:49:30.007 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select deliveries_list_id from deliveries_list where deliveries_list_id =?
11:49:30.007 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select deliveries_.deliveries_list_id, deliveries_.delivery_id as delivery3_2_, deliveries_.product_id as product_4_2_, deliveries_.quantity as quantity2_2_ from deliveries_list deliveries_ where deliveries_.deliveries_list_id=?
11:49:30.007 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into deliveries_list (delivery_id, product_id, quantity, deliveries_list_id) values (?, ?, ?, ?)
11:49:30.007 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update deliveries_list set delivery_id=?, product_id=?, quantity=? where deliveries_list_id=?
11:49:30.007 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from deliveries_list where deliveries_list_id=?
11:49:30.007 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into deliveries_list (delivery_id, product_id, quantity) values (?, ?, ?)
11:49:30.037 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ce2c454]
11:49:30.039 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : delivery_id
11:49:30.042 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9f7cf8]
11:49:30.043 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : delivery_id.client_id
11:49:30.043 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d776105]
11:49:30.043 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : delivery_id.client_id.address
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : delivery_id.client_id.client_name
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : delivery_id.client_id.contact
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : delivery_id.client_id.email
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : delivery_id.date_issue
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : delivery_id.status
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id
11:49:30.044 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cdbc986]
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.expiration_date_from
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.expiration_date_to
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.measure
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.place_id
11:49:30.044 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1a8e78]
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.place_id.free
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.place_id.storage_location
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.product_name
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.quantity
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.type
11:49:30.044 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : quantity
11:49:30.044 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:49:30.056 [Test worker] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:49:30.061 [Test worker] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=web_prak.java.classes.Deliveries_list)
    - Returns
       - EntityReturnImpl(entity=web_prak.java.classes.Deliveries_list, querySpaceUid=<gen:0>, path=web_prak.java.classes.Deliveries_list)
          - EntityAttributeFetchImpl(entity=web_prak.java.classes.Deliveries, querySpaceUid=<gen:1>, path=web_prak.java.classes.Deliveries_list.delivery_id)
             - EntityAttributeFetchImpl(entity=web_prak.java.classes.Clients, querySpaceUid=<gen:2>, path=web_prak.java.classes.Deliveries_list.delivery_id.client_id)
          - EntityAttributeFetchImpl(entity=web_prak.java.classes.Products, querySpaceUid=<gen:3>, path=web_prak.java.classes.Deliveries_list.product_id)
             - EntityAttributeFetchImpl(entity=web_prak.java.classes.Register_place, querySpaceUid=<gen:4>, path=web_prak.java.classes.Deliveries_list.product_id.place_id)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=web_prak.java.classes.Deliveries_list)
          - SQL table alias mapping - deliveries0_
          - alias suffix - 0_
          - suffixed key columns - {deliveri1_2_0_}
          - JOIN (JoinDefinedByMetadata(delivery_id)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=web_prak.java.classes.Deliveries)
                - SQL table alias mapping - deliveries1_
                - alias suffix - 1_
                - suffixed key columns - {delivery1_1_1_}
                - JOIN (JoinDefinedByMetadata(client_id)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=web_prak.java.classes.Clients)
                      - SQL table alias mapping - clients2_
                      - alias suffix - 2_
                      - suffixed key columns - {client_i1_0_2_}
          - JOIN (JoinDefinedByMetadata(product_id)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=web_prak.java.classes.Products)
                - SQL table alias mapping - products3_
                - alias suffix - 3_
                - suffixed key columns - {product_1_3_3_}
                - JOIN (JoinDefinedByMetadata(place_id)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=web_prak.java.classes.Register_place)
                      - SQL table alias mapping - register_p4_
                      - alias suffix - 4_
                      - suffixed key columns - {place_id1_4_4_}

11:49:30.064 [Test worker] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity web_prak.java.classes.Deliveries_list [NONE]: select deliveries0_.deliveries_list_id as deliveri1_2_0_, deliveries0_.delivery_id as delivery3_2_0_, deliveries0_.product_id as product_4_2_0_, deliveries0_.quantity as quantity2_2_0_, deliveries1_.delivery_id as delivery1_1_1_, deliveries1_.client_id as client_i4_1_1_, deliveries1_.date_issue as date_iss2_1_1_, deliveries1_.status as status3_1_1_, clients2_.client_id as client_i1_0_2_, clients2_.address as address2_0_2_, clients2_.client_name as client_n3_0_2_, clients2_.contact as contact4_0_2_, clients2_.email as email5_0_2_, products3_.product_id as product_1_3_3_, products3_.expiration_date_from as expirati2_3_3_, products3_.expiration_date_to as expirati3_3_3_, products3_.measure as measure4_3_3_, products3_.place_id as place_id8_3_3_, products3_.product_name as product_5_3_3_, products3_.quantity as quantity6_3_3_, products3_.type as type7_3_3_, register_p4_.place_id as place_id1_4_4_, register_p4_.free as free2_4_4_, register_p4_.storage_location as storage_3_4_4_ from deliveries_list deliveries0_ left outer join deliveries deliveries1_ on deliveries0_.delivery_id=deliveries1_.delivery_id left outer join clients clients2_ on deliveries1_.client_id=clients2_.client_id left outer join products products3_ on deliveries0_.product_id=products3_.product_id left outer join register_place register_p4_ on products3_.place_id=register_p4_.place_id where deliveries0_.deliveries_list_id=?
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: web_prak.java.classes.Deliveries
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select delivery_id from deliveries where delivery_id =?
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select deliveries_.delivery_id, deliveries_.client_id as client_i4_1_, deliveries_.date_issue as date_iss2_1_, deliveries_.status as status3_1_ from deliveries deliveries_ where deliveries_.delivery_id=?
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into deliveries (client_id, date_issue, status, delivery_id) values (?, ?, ?, ?)
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update deliveries set client_id=?, date_issue=?, status=? where delivery_id=?
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from deliveries where delivery_id=?
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into deliveries (client_id, date_issue, status) values (?, ?, ?)
11:49:30.065 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@673a702a]
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : client_id
11:49:30.065 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e7c66b3]
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : client_id.address
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : client_id.client_name
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : client_id.contact
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : client_id.email
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date_issue
11:49:30.065 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : status
11:49:30.065 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:49:30.065 [Test worker] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:49:30.066 [Test worker] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=web_prak.java.classes.Deliveries)
    - Returns
       - EntityReturnImpl(entity=web_prak.java.classes.Deliveries, querySpaceUid=<gen:0>, path=web_prak.java.classes.Deliveries)
          - EntityAttributeFetchImpl(entity=web_prak.java.classes.Clients, querySpaceUid=<gen:1>, path=web_prak.java.classes.Deliveries.client_id)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=web_prak.java.classes.Deliveries)
          - SQL table alias mapping - deliveries0_
          - alias suffix - 0_
          - suffixed key columns - {delivery1_1_0_}
          - JOIN (JoinDefinedByMetadata(client_id)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=web_prak.java.classes.Clients)
                - SQL table alias mapping - clients1_
                - alias suffix - 1_
                - suffixed key columns - {client_i1_0_1_}

11:49:30.066 [Test worker] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity web_prak.java.classes.Deliveries [NONE]: select deliveries0_.delivery_id as delivery1_1_0_, deliveries0_.client_id as client_i4_1_0_, deliveries0_.date_issue as date_iss2_1_0_, deliveries0_.status as status3_1_0_, clients1_.client_id as client_i1_0_1_, clients1_.address as address2_0_1_, clients1_.client_name as client_n3_0_1_, clients1_.contact as contact4_0_1_, clients1_.email as email5_0_1_ from deliveries deliveries0_ left outer join clients clients1_ on deliveries0_.client_id=clients1_.client_id where deliveries0_.delivery_id=?
11:49:30.066 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: web_prak.java.classes.Products
11:49:30.066 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select product_id from products where product_id =?
11:49:30.066 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select products_.product_id, products_.expiration_date_from as expirati2_3_, products_.expiration_date_to as expirati3_3_, products_.measure as measure4_3_, products_.place_id as place_id8_3_, products_.product_name as product_5_3_, products_.quantity as quantity6_3_, products_.type as type7_3_ from products products_ where products_.product_id=?
11:49:30.066 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type, product_id) values (?, ?, ?, ?, ?, ?, ?, ?)
11:49:30.066 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update products set expiration_date_from=?, expiration_date_to=?, measure=?, place_id=?, product_name=?, quantity=?, type=? where product_id=?
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from products where product_id=?
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:30.067 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64a0ee65]
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : expiration_date_from
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : expiration_date_to
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : measure
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : place_id
11:49:30.067 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f2bf3a]
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : place_id.free
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : place_id.storage_location
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_name
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : quantity
11:49:30.067 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
11:49:30.067 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:49:30.067 [Test worker] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:49:30.068 [Test worker] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=web_prak.java.classes.Products)
    - Returns
       - EntityReturnImpl(entity=web_prak.java.classes.Products, querySpaceUid=<gen:0>, path=web_prak.java.classes.Products)
          - EntityAttributeFetchImpl(entity=web_prak.java.classes.Register_place, querySpaceUid=<gen:1>, path=web_prak.java.classes.Products.place_id)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=web_prak.java.classes.Products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_3_0_}
          - JOIN (JoinDefinedByMetadata(place_id)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=web_prak.java.classes.Register_place)
                - SQL table alias mapping - register_p1_
                - alias suffix - 1_
                - suffixed key columns - {place_id1_4_1_}

11:49:30.068 [Test worker] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity web_prak.java.classes.Products [NONE]: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: web_prak.java.classes.Suppliers
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select supplier_id from suppliers where supplier_id =?
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select suppliers_.supplier_id, suppliers_.address as address2_5_, suppliers_.contact as contact3_5_, suppliers_.email as email4_5_, suppliers_.supplier_name as supplier5_5_ from suppliers suppliers_ where suppliers_.supplier_id=?
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into suppliers (address, contact, email, supplier_name, supplier_id) values (?, ?, ?, ?, ?)
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update suppliers set address=?, contact=?, email=?, supplier_name=? where supplier_id=?
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from suppliers where supplier_id=?
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into suppliers (address, contact, email, supplier_name) values (?, ?, ?, ?)
11:49:30.068 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293dd4b3]
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : address
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : contact
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : email
11:49:30.068 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supplier_name
11:49:30.069 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:49:30.069 [Test worker] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:49:30.069 [Test worker] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=web_prak.java.classes.Suppliers)
    - Returns
       - EntityReturnImpl(entity=web_prak.java.classes.Suppliers, querySpaceUid=<gen:0>, path=web_prak.java.classes.Suppliers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=web_prak.java.classes.Suppliers)
          - SQL table alias mapping - suppliers0_
          - alias suffix - 0_
          - suffixed key columns - {supplier1_5_0_}

11:49:30.069 [Test worker] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity web_prak.java.classes.Suppliers [NONE]: select suppliers0_.supplier_id as supplier1_5_0_, suppliers0_.address as address2_5_0_, suppliers0_.contact as contact3_5_0_, suppliers0_.email as email4_5_0_, suppliers0_.supplier_name as supplier5_5_0_ from suppliers suppliers0_ where suppliers0_.supplier_id=?
11:49:30.069 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: web_prak.java.classes.Clients
11:49:30.069 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select client_id from clients where client_id =?
11:49:30.069 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select clients_.client_id, clients_.address as address2_0_, clients_.client_name as client_n3_0_, clients_.contact as contact4_0_, clients_.email as email5_0_ from clients clients_ where clients_.client_id=?
11:49:30.069 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into clients (address, client_name, contact, email, client_id) values (?, ?, ?, ?, ?)
11:49:30.069 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update clients set address=?, client_name=?, contact=?, email=? where client_id=?
11:49:30.069 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from clients where client_id=?
11:49:30.069 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
11:49:30.069 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51577fc8]
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : address
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : client_name
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : contact
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : email
11:49:30.070 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:49:30.070 [Test worker] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:49:30.070 [Test worker] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=web_prak.java.classes.Clients)
    - Returns
       - EntityReturnImpl(entity=web_prak.java.classes.Clients, querySpaceUid=<gen:0>, path=web_prak.java.classes.Clients)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=web_prak.java.classes.Clients)
          - SQL table alias mapping - clients0_
          - alias suffix - 0_
          - suffixed key columns - {client_i1_0_0_}

11:49:30.070 [Test worker] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity web_prak.java.classes.Clients [NONE]: select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: web_prak.java.classes.Supplies
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select supply_id from supplies where supply_id =?
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select supplies_.supply_id, supplies_.data_supply as data_sup2_6_, supplies_.status as status3_6_, supplies_.store_period as store_pe4_6_, supplies_.supplier_id as supplier5_6_ from supplies supplies_ where supplies_.supply_id=?
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into supplies (data_supply, status, store_period, supplier_id, supply_id) values (?, ?, ?, ?, ?)
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update supplies set data_supply=?, status=?, store_period=?, supplier_id=? where supply_id=?
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from supplies where supply_id=?
11:49:30.070 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into supplies (data_supply, status, store_period, supplier_id) values (?, ?, ?, ?)
11:49:30.070 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@326320bb]
11:49:30.071 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : data_supply
11:49:30.071 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : status
11:49:30.071 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : store_period
11:49:30.071 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supplier_id
11:49:30.071 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d94b49d]
11:49:30.071 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supplier_id.address
11:49:30.071 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supplier_id.contact
11:49:30.071 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supplier_id.email
11:49:30.071 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supplier_id.supplier_name
11:49:30.071 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:49:30.071 [Test worker] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:49:30.072 [Test worker] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=web_prak.java.classes.Supplies)
    - Returns
       - EntityReturnImpl(entity=web_prak.java.classes.Supplies, querySpaceUid=<gen:0>, path=web_prak.java.classes.Supplies)
          - EntityAttributeFetchImpl(entity=web_prak.java.classes.Suppliers, querySpaceUid=<gen:1>, path=web_prak.java.classes.Supplies.supplier_id)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=web_prak.java.classes.Supplies)
          - SQL table alias mapping - supplies0_
          - alias suffix - 0_
          - suffixed key columns - {supply_i1_6_0_}
          - JOIN (JoinDefinedByMetadata(supplier_id)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=web_prak.java.classes.Suppliers)
                - SQL table alias mapping - suppliers1_
                - alias suffix - 1_
                - suffixed key columns - {supplier1_5_1_}

11:49:30.072 [Test worker] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity web_prak.java.classes.Supplies [NONE]: select supplies0_.supply_id as supply_i1_6_0_, supplies0_.data_supply as data_sup2_6_0_, supplies0_.status as status3_6_0_, supplies0_.store_period as store_pe4_6_0_, supplies0_.supplier_id as supplier5_6_0_, suppliers1_.supplier_id as supplier1_5_1_, suppliers1_.address as address2_5_1_, suppliers1_.contact as contact3_5_1_, suppliers1_.email as email4_5_1_, suppliers1_.supplier_name as supplier5_5_1_ from supplies supplies0_ left outer join suppliers suppliers1_ on supplies0_.supplier_id=suppliers1_.supplier_id where supplies0_.supply_id=?
11:49:30.072 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: web_prak.java.classes.Register_place
11:49:30.072 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select place_id from register_place where place_id =?
11:49:30.072 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select register_p_.place_id, register_p_.free as free2_4_, register_p_.storage_location as storage_3_4_ from register_place register_p_ where register_p_.place_id=?
11:49:30.072 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into register_place (free, storage_location, place_id) values (?, ?, ?)
11:49:30.072 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update register_place set free=?, storage_location=? where place_id=?
11:49:30.072 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from register_place where place_id=?
11:49:30.072 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into register_place (free, storage_location) values (?, ?)
11:49:30.072 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4203190]
11:49:30.072 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : free
11:49:30.072 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : storage_location
11:49:30.072 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:49:30.072 [Test worker] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:49:30.072 [Test worker] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=web_prak.java.classes.Register_place)
    - Returns
       - EntityReturnImpl(entity=web_prak.java.classes.Register_place, querySpaceUid=<gen:0>, path=web_prak.java.classes.Register_place)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=web_prak.java.classes.Register_place)
          - SQL table alias mapping - register_p0_
          - alias suffix - 0_
          - suffixed key columns - {place_id1_4_0_}

11:49:30.072 [Test worker] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity web_prak.java.classes.Register_place [NONE]: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: web_prak.java.classes.Supplies_list
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select supplies_list_id from supplies_list where supplies_list_id =?
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select supplies_l_.supplies_list_id, supplies_l_.product_id as product_3_7_, supplies_l_.quantity as quantity2_7_, supplies_l_.supply_id as supply_i4_7_ from supplies_list supplies_l_ where supplies_l_.supplies_list_id=?
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into supplies_list (product_id, quantity, supply_id, supplies_list_id) values (?, ?, ?, ?)
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update supplies_list set product_id=?, quantity=?, supply_id=? where supplies_list_id=?
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from supplies_list where supplies_list_id=?
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into supplies_list (product_id, quantity, supply_id) values (?, ?, ?)
11:49:30.073 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72f5fb36]
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id
11:49:30.073 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@352288bc]
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.expiration_date_from
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.expiration_date_to
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.measure
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.place_id
11:49:30.073 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6edd8d56]
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.place_id.free
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.place_id.storage_location
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.product_name
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.quantity
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : product_id.type
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : quantity
11:49:30.073 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supply_id
11:49:30.073 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2360ebe2]
11:49:30.074 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supply_id.data_supply
11:49:30.074 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supply_id.status
11:49:30.074 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supply_id.store_period
11:49:30.074 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supply_id.supplier_id
11:49:30.074 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75cfb958]
11:49:30.074 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supply_id.supplier_id.address
11:49:30.074 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supply_id.supplier_id.contact
11:49:30.074 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supply_id.supplier_id.email
11:49:30.074 [Test worker] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : supply_id.supplier_id.supplier_name
11:49:30.074 [Test worker] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
11:49:30.074 [Test worker] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
11:49:30.075 [Test worker] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=web_prak.java.classes.Supplies_list)
    - Returns
       - EntityReturnImpl(entity=web_prak.java.classes.Supplies_list, querySpaceUid=<gen:0>, path=web_prak.java.classes.Supplies_list)
          - EntityAttributeFetchImpl(entity=web_prak.java.classes.Products, querySpaceUid=<gen:1>, path=web_prak.java.classes.Supplies_list.product_id)
             - EntityAttributeFetchImpl(entity=web_prak.java.classes.Register_place, querySpaceUid=<gen:2>, path=web_prak.java.classes.Supplies_list.product_id.place_id)
          - EntityAttributeFetchImpl(entity=web_prak.java.classes.Supplies, querySpaceUid=<gen:3>, path=web_prak.java.classes.Supplies_list.supply_id)
             - EntityAttributeFetchImpl(entity=web_prak.java.classes.Suppliers, querySpaceUid=<gen:4>, path=web_prak.java.classes.Supplies_list.supply_id.supplier_id)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=web_prak.java.classes.Supplies_list)
          - SQL table alias mapping - supplies_l0_
          - alias suffix - 0_
          - suffixed key columns - {supplies1_7_0_}
          - JOIN (JoinDefinedByMetadata(product_id)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=web_prak.java.classes.Products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {product_1_3_1_}
                - JOIN (JoinDefinedByMetadata(place_id)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=web_prak.java.classes.Register_place)
                      - SQL table alias mapping - register_p2_
                      - alias suffix - 2_
                      - suffixed key columns - {place_id1_4_2_}
          - JOIN (JoinDefinedByMetadata(supply_id)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=web_prak.java.classes.Supplies)
                - SQL table alias mapping - supplies3_
                - alias suffix - 3_
                - suffixed key columns - {supply_i1_6_3_}
                - JOIN (JoinDefinedByMetadata(supplier_id)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=web_prak.java.classes.Suppliers)
                      - SQL table alias mapping - suppliers4_
                      - alias suffix - 4_
                      - suffixed key columns - {supplier1_5_4_}

11:49:30.078 [Test worker] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity web_prak.java.classes.Supplies_list [NONE]: select supplies_l0_.supplies_list_id as supplies1_7_0_, supplies_l0_.product_id as product_3_7_0_, supplies_l0_.quantity as quantity2_7_0_, supplies_l0_.supply_id as supply_i4_7_0_, products1_.product_id as product_1_3_1_, products1_.expiration_date_from as expirati2_3_1_, products1_.expiration_date_to as expirati3_3_1_, products1_.measure as measure4_3_1_, products1_.place_id as place_id8_3_1_, products1_.product_name as product_5_3_1_, products1_.quantity as quantity6_3_1_, products1_.type as type7_3_1_, register_p2_.place_id as place_id1_4_2_, register_p2_.free as free2_4_2_, register_p2_.storage_location as storage_3_4_2_, supplies3_.supply_id as supply_i1_6_3_, supplies3_.data_supply as data_sup2_6_3_, supplies3_.status as status3_6_3_, supplies3_.store_period as store_pe4_6_3_, supplies3_.supplier_id as supplier5_6_3_, suppliers4_.supplier_id as supplier1_5_4_, suppliers4_.address as address2_5_4_, suppliers4_.contact as contact3_5_4_, suppliers4_.email as email4_5_4_, suppliers4_.supplier_name as supplier5_5_4_ from supplies_list supplies_l0_ left outer join products products1_ on supplies_l0_.product_id=products1_.product_id left outer join register_place register_p2_ on products1_.place_id=register_p2_.place_id left outer join supplies supplies3_ on supplies_l0_.supply_id=supplies3_.supply_id left outer join suppliers suppliers4_ on supplies3_.supplier_id=suppliers4_.supplier_id where supplies_l0_.supplies_list_id=?
11:49:30.107 [Test worker] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
11:49:30.110 [Test worker] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
11:49:30.110 [Test worker] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
11:49:30.114 [Test worker] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
11:49:30.119 [Test worker] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@652855c4
11:49:30.121 [Test worker] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: d3b4aaa2-093c-459f-9a04-8cdb0c722694 (<unnamed>)
11:49:30.121 [Test worker] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
11:49:30.180 [Test worker] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
11:49:30.186 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.187 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.204 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:30.210 [Test worker] DEBUG org.hibernate.SQL - insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
Hibernate: insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
11:49:30.227 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 387
11:49:30.228 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:30.230 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.231 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.231 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.237 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:30.237 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.238 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.239 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Ярославское шоссе д26, contact=+7 (976) 130-93-80, client_name=Иван Иванов, client_id=387, email=cromaint0@go.com}
11:49:30.276 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.277 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.285 [Test worker] DEBUG org.hibernate.SQL - select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
Hibernate: select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
11:49:30.291 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:30.297 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Clients#387]
11:49:30.297 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = Ярославское шоссе д26
11:49:30.297 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:30.297 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `client_name` : value = Иван Иванов
11:49:30.297 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`client_name`)  - enhanced for lazy-loading? - false
11:49:30.297 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (976) 130-93-80
11:49:30.297 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:30.297 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = cromaint0@go.com
11:49:30.297 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:30.298 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Clients#387]
11:49:30.299 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Clients#387
11:49:30.299 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.303 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.303 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.307 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.308 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.308 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.308 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:30.308 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.308 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.308 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Ярославское шоссе д26, contact=+7 (976) 130-93-80, client_name=Иван Иванов, client_id=387, email=cromaint0@go.com}
11:49:30.312 [Test worker] DEBUG org.hibernate.SQL - delete from clients where client_id=?
Hibernate: delete from clients where client_id=?
11:49:30.337 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.337 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.337 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:30.340 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.340 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.340 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:30.340 [Test worker] DEBUG org.hibernate.SQL - insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
Hibernate: insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
11:49:30.342 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 388
11:49:30.342 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:30.342 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.342 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.342 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.342 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:30.342 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.342 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.343 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Мосфильмовская улица, д53, contact=+7 (975) 135-96-90, client_name=Василиса Угаройко, client_id=388, email=jcess1@mashable.com}
11:49:30.353 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.353 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.354 [Test worker] DEBUG org.hibernate.SQL - select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
Hibernate: select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
11:49:30.355 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:30.355 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Clients#388]
11:49:30.355 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = Мосфильмовская улица, д53
11:49:30.355 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:30.355 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `client_name` : value = Василиса Угаройко
11:49:30.355 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`client_name`)  - enhanced for lazy-loading? - false
11:49:30.355 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (975) 135-96-90
11:49:30.355 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:30.355 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = jcess1@mashable.com
11:49:30.355 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:30.355 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Clients#388]
11:49:30.355 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Clients#388
11:49:30.355 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.356 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.356 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.356 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.356 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.356 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.356 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:30.356 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.356 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.356 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Мосфильмовская улица, д53, contact=+7 (975) 135-96-90, client_name=Василиса Угаройко, client_id=388, email=jcess1@mashable.com}
11:49:30.356 [Test worker] DEBUG org.hibernate.SQL - delete from clients where client_id=?
Hibernate: delete from clients where client_id=?
11:49:30.370 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.370 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.370 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:30.371 [Test worker] DEBUG org.hibernate.SQL - select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
Hibernate: select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
11:49:30.372 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Clients#388
11:49:30.372 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.374 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.374 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.374 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:30.374 [Test worker] DEBUG org.hibernate.SQL - insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
Hibernate: insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
11:49:30.375 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 389
11:49:30.376 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:30.376 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.376 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.376 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.376 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:30.376 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.376 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.376 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Мосфильмовская улица, д53, contact=+7 (975) 135-96-90, client_name=Иван Иванов, client_id=389, email=jcess1@mashable.com}
11:49:30.387 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.387 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.387 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.387 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.387 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:30.387 [Test worker] DEBUG org.hibernate.SQL - insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
Hibernate: insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
11:49:30.388 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 390
11:49:30.388 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:30.389 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.389 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.389 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.389 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:30.389 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.389 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.389 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Ярославское шоссе д26, contact=+7 (976) 130-93-80, client_name=Иван Иванов, client_id=390, email=cromaint0@go.com}
11:49:30.404 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.404 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.420 [Test worker] DEBUG org.hibernate.query.criteria.internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Clients as generatedAlias0
11:49:30.436 [Test worker] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3e711e84
11:49:30.475 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from web_prak.java.classes.Clients as generatedAlias0
11:49:30.478 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:30.484 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'web_prak'
       |     |  |  |  \-[IDENT] Node: 'java'
       |     |  |  \-[IDENT] Node: 'classes'
       |     |  \-[IDENT] Node: 'Clients'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

11:49:30.511 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:30.526 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Clients (generatedAlias0) -> clients0_
11:49:30.527 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> clients0_.client_id
11:49:30.529 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:30.529 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} clients0_.client_id ) ( FromClause{level=1} clients clients0_ ) )
11:49:30.534 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Clients): [clients]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Clients)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

11:49:30.538 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [clients clients0_]
11:49:30.538 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:30.538 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'clients0_.client_id as client_i1_0_' {alias=generatedAlias0, className=web_prak.java.classes.Clients, tableAlias=clients0_}
    |  \-[SQL_TOKEN] SqlFragment: 'clients0_.address as address2_0_, clients0_.client_name as client_n3_0_, clients0_.contact as contact4_0_, clients0_.email as email5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[clients0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'clients clients0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=clients,tableAlias=clients0_,origin=null,columns={,className=web_prak.java.classes.Clients}}

11:49:30.538 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:30.549 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from web_prak.java.classes.Clients as generatedAlias0
11:49:30.549 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select clients0_.client_id as client_i1_0_, clients0_.address as address2_0_, clients0_.client_name as client_n3_0_, clients0_.contact as contact4_0_, clients0_.email as email5_0_ from clients clients0_
11:49:30.549 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:30.559 [Test worker] DEBUG org.hibernate.SQL - select clients0_.client_id as client_i1_0_, clients0_.address as address2_0_, clients0_.client_name as client_n3_0_, clients0_.contact as contact4_0_, clients0_.email as email5_0_ from clients clients0_
Hibernate: select clients0_.client_id as client_i1_0_, clients0_.address as address2_0_, clients0_.client_name as client_n3_0_, clients0_.contact as contact4_0_, clients0_.email as email5_0_ from clients clients0_
11:49:30.562 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:30.563 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Clients#389]
11:49:30.563 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:30.564 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Clients#390]
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Clients#389]
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = Мосфильмовская улица, д53
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `client_name` : value = Иван Иванов
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`client_name`)  - enhanced for lazy-loading? - false
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (975) 135-96-90
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = jcess1@mashable.com
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Clients#389]
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Clients#390]
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = Ярославское шоссе д26
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `client_name` : value = Иван Иванов
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`client_name`)  - enhanced for lazy-loading? - false
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (976) 130-93-80
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = cromaint0@go.com
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:30.564 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Clients#390]
11:49:30.566 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.571 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.571 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.572 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.572 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.572 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.572 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:30.572 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.572 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.572 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Мосфильмовская улица, д53, contact=+7 (975) 135-96-90, client_name=Иван Иванов, client_id=389, email=jcess1@mashable.com}
11:49:30.572 [Test worker] DEBUG org.hibernate.SQL - delete from clients where client_id=?
Hibernate: delete from clients where client_id=?
11:49:30.603 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.603 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.603 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:30.603 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.603 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.603 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.603 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.603 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.603 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:30.604 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.604 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.604 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Ярославское шоссе д26, contact=+7 (976) 130-93-80, client_name=Иван Иванов, client_id=390, email=cromaint0@go.com}
11:49:30.604 [Test worker] DEBUG org.hibernate.SQL - delete from clients where client_id=?
Hibernate: delete from clients where client_id=?
11:49:30.619 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.619 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.619 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:30.620 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.620 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.620 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:30.620 [Test worker] DEBUG org.hibernate.SQL - insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
Hibernate: insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
11:49:30.621 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 391
11:49:30.621 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:30.621 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.621 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.621 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.621 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:30.621 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.621 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.622 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Мосфильмовская улица, д53, contact=+7 (975) 135-96-90, client_name=Василиса Угаройко, client_id=391, email=jcess1@mashable.com}
11:49:30.635 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.635 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.636 [Test worker] DEBUG org.hibernate.SQL - select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
Hibernate: select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
11:49:30.636 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Clients#391]
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = Мосфильмовская улица, д53
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `client_name` : value = Василиса Угаройко
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`client_name`)  - enhanced for lazy-loading? - false
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (975) 135-96-90
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = jcess1@mashable.com
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Clients#391]
11:49:30.637 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Clients#391
11:49:30.637 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.637 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.638 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.638 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.638 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.638 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:30.638 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.638 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.638 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Мосфильмовская улица, д53, contact=+7 (975) 135-96-90, client_name=Василиса Угаройко, client_id=391, email=jcess1@mashable.com}
11:49:30.638 [Test worker] DEBUG org.hibernate.SQL - delete from clients where client_id=?
Hibernate: delete from clients where client_id=?
11:49:30.653 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.653 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.653 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:30.654 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.654 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.654 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:30.654 [Test worker] DEBUG org.hibernate.SQL - insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
Hibernate: insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
11:49:30.655 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 392
11:49:30.655 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:30.655 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.655 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.655 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.655 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:30.655 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.655 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.655 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Мосфильмовская улица, д53, contact=+7 (975) 135-96-90, client_name=Иван Иванов, client_id=392, email=jcess1@mashable.com}
11:49:30.669 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.669 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.669 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.669 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.669 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:30.669 [Test worker] DEBUG org.hibernate.SQL - insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
Hibernate: insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
11:49:30.670 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 393
11:49:30.670 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:30.670 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.670 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.670 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.671 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:30.671 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.671 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.671 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Ярославское шоссе д26, contact=+7 (976) 130-93-80, client_name=Иван Иванов, client_id=393, email=cromaint0@go.com}
11:49:30.686 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.686 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.687 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: From web_prak.java.classes.Clients Where client_name =: param
11:49:30.688 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:30.688 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'From'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'web_prak'
    |           |  |  \-[IDENT] Node: 'java'
    |           |  \-[IDENT] Node: 'classes'
    |           \-[IDENT] Node: 'Clients'
    \-[WHERE] Node: 'Where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'client_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:30.688 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:30.688 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Clients (<no alias>) -> clients0_
11:49:30.690 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
11:49:30.691 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : client_name -> org.hibernate.type.StringType@2b170932
11:49:30.691 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.client_name -> clients0_.client_name
11:49:30.692 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:30.692 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} clients clients0_ ) ( Where ( = ( clients0_.client_name {synthetic-alias} client_name ) ? ) ) )
11:49:30.692 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
11:49:30.693 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Clients): [clients]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Clients)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Clients)
          | path: {synthetic-alias}.client_name
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Clients)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: client_name
          \-ParameterNode

11:49:30.693 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [clients clients0_]
11:49:30.693 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:30.693 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (clients)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'clients0_.client_id as client_i1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=clients0_,origin=null,columns={,className=web_prak.java.classes.Clients}}}
    |  \-[SQL_TOKEN] SqlFragment: 'clients0_.address as address2_0_, clients0_.client_name as client_n3_0_, clients0_.contact as contact4_0_, clients0_.email as email5_0_'
    +-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[clients0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'clients clients0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=clients,tableAlias=clients0_,origin=null,columns={,className=web_prak.java.classes.Clients}}
    \-[WHERE] SqlNode: 'Where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'clients0_.client_name' {propertyName=client_name,dereferenceType=PRIMITIVE,getPropertyPath=client_name,path={synthetic-alias}.client_name,tableAlias=clients0_,className=web_prak.java.classes.Clients,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'client_name' {originalText=client_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.StringType@2b170932}

11:49:30.693 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:30.694 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: From web_prak.java.classes.Clients Where client_name =: param
11:49:30.694 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select clients0_.client_id as client_i1_0_, clients0_.address as address2_0_, clients0_.client_name as client_n3_0_, clients0_.contact as contact4_0_, clients0_.email as email5_0_ from clients clients0_ where clients0_.client_name=?
11:49:30.694 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:30.696 [Test worker] DEBUG org.hibernate.SQL - select clients0_.client_id as client_i1_0_, clients0_.address as address2_0_, clients0_.client_name as client_n3_0_, clients0_.contact as contact4_0_, clients0_.email as email5_0_ from clients clients0_ where clients0_.client_name=?
Hibernate: select clients0_.client_id as client_i1_0_, clients0_.address as address2_0_, clients0_.client_name as client_n3_0_, clients0_.contact as contact4_0_, clients0_.email as email5_0_ from clients clients0_ where clients0_.client_name=?
11:49:30.697 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:30.697 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Clients#392]
11:49:30.697 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:30.697 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Clients#393]
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Clients#392]
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = Мосфильмовская улица, д53
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `client_name` : value = Иван Иванов
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`client_name`)  - enhanced for lazy-loading? - false
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (975) 135-96-90
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = jcess1@mashable.com
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Clients#392]
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Clients#393]
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = Ярославское шоссе д26
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `client_name` : value = Иван Иванов
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`client_name`)  - enhanced for lazy-loading? - false
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (976) 130-93-80
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = cromaint0@go.com
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:30.698 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Clients#393]
11:49:30.698 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.699 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.699 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.699 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.699 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.699 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.699 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:30.699 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.699 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.699 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Мосфильмовская улица, д53, contact=+7 (975) 135-96-90, client_name=Иван Иванов, client_id=392, email=jcess1@mashable.com}
11:49:30.699 [Test worker] DEBUG org.hibernate.SQL - delete from clients where client_id=?
Hibernate: delete from clients where client_id=?
11:49:30.713 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.714 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.714 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:30.714 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.714 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.714 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.714 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.714 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.714 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:30.714 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.714 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.714 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Ярославское шоссе д26, contact=+7 (976) 130-93-80, client_name=Иван Иванов, client_id=393, email=cromaint0@go.com}
11:49:30.714 [Test worker] DEBUG org.hibernate.SQL - delete from clients where client_id=?
Hibernate: delete from clients where client_id=?
11:49:30.731 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.731 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.731 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:30.732 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.732 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.732 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:30.732 [Test worker] DEBUG org.hibernate.SQL - insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
Hibernate: insert into clients (address, client_name, contact, email) values (?, ?, ?, ?)
11:49:30.733 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 394
11:49:30.733 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:30.733 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.733 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.733 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.733 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:30.733 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.733 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.733 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Мосфильмовская улица, д53, contact=+7 (975) 135-96-90, client_name=Василиса Угаройко, client_id=394, email=jcess1@mashable.com}
11:49:30.747 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.747 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.747 [Test worker] DEBUG org.hibernate.SQL - select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
Hibernate: select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
11:49:30.748 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:30.749 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Clients#394]
11:49:30.749 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = Мосфильмовская улица, д53
11:49:30.749 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:30.749 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `client_name` : value = Василиса Угаройко
11:49:30.749 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`client_name`)  - enhanced for lazy-loading? - false
11:49:30.749 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (975) 135-96-90
11:49:30.749 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:30.749 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = jcess1@mashable.com
11:49:30.749 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:30.749 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Clients#394]
11:49:30.749 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Clients#394
11:49:30.749 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.750 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.750 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.750 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.750 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.750 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.751 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
11:49:30.751 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.751 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.751 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Достоевского д17, contact=+7 (975) 135-96-90, client_name=Василиса Угаройко, client_id=394, email=jcess1@mashable.com}
11:49:30.751 [Test worker] DEBUG org.hibernate.SQL - update clients set address=?, client_name=?, contact=?, email=? where client_id=?
Hibernate: update clients set address=?, client_name=?, contact=?, email=? where client_id=?
11:49:30.764 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.764 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.764 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:30.765 [Test worker] DEBUG org.hibernate.SQL - select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
Hibernate: select clients0_.client_id as client_i1_0_0_, clients0_.address as address2_0_0_, clients0_.client_name as client_n3_0_0_, clients0_.contact as contact4_0_0_, clients0_.email as email5_0_0_ from clients clients0_ where clients0_.client_id=?
11:49:30.765 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Clients#394]
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `address` : value = Достоевского д17
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `client_name` : value = Василиса Угаройко
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`client_name`)  - enhanced for lazy-loading? - false
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `contact` : value = +7 (975) 135-96-90
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`contact`)  - enhanced for lazy-loading? - false
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `email` : value = jcess1@mashable.com
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Clients#394]
11:49:30.766 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Clients#394
11:49:30.766 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:30.766 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:30.767 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:30.767 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:30.767 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:30.767 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:30.767 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:30.767 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:30.767 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Clients{address=Достоевского д17, contact=+7 (975) 135-96-90, client_name=Василиса Угаройко, client_id=394, email=jcess1@mashable.com}
11:49:30.767 [Test worker] DEBUG org.hibernate.SQL - delete from clients where client_id=?
Hibernate: delete from clients where client_id=?
11:49:30.781 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.781 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:30.781 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
