<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ProductsTest" tests="11" skipped="0" failures="0" errors="0" timestamp="2022-04-04T08:49:34" hostname="bekzat-Lenovo-Legion-Y530-15ICH" time="2.408">
  <properties/>
  <testcase name="testCreateNewProduct" classname="ProductsTest" time="0.066"/>
  <testcase name="testDeleteProduct" classname="ProductsTest" time="0.067"/>
  <testcase name="testGetProductAll" classname="ProductsTest" time="0.155"/>
  <testcase name="testGetProductByExpirationDateFrom" classname="ProductsTest" time="1.229"/>
  <testcase name="testGetProductByExpirationDateFromAfter" classname="ProductsTest" time="0.143"/>
  <testcase name="testGetProductByExpirationDateFromBefore" classname="ProductsTest" time="0.134"/>
  <testcase name="testGetProductByExpirationDateTo" classname="ProductsTest" time="0.156"/>
  <testcase name="testGetProductById" classname="ProductsTest" time="0.067"/>
  <testcase name="testGetProductByName" classname="ProductsTest" time="0.144"/>
  <testcase name="testGetProductByType" classname="ProductsTest" time="0.156"/>
  <testcase name="testUpdateProduct" classname="ProductsTest" time="0.084"/>
  <system-out><![CDATA[11:49:34.916 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:34.916 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:34.916 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:34.916 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:34.917 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 529
11:49:34.917 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:34.917 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:34.917 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:34.917 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:34.917 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:34.917 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:34.917 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:34.917 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=529}
11:49:34.932 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.932 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.932 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:34.932 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:34.932 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:34.933 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:34.933 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 425
11:49:34.934 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:34.934 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:34.934 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:34.934 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:34.934 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:34.934 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:34.934 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:34.934 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=425, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#529}
11:49:34.948 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.949 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.949 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:34.950 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#425]
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 529
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#425]
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#529]
11:49:34.950 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:34.951 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:34.951 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:34.951 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:34.951 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#529]
11:49:34.951 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#425
11:49:34.951 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.951 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:34.951 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:34.951 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:34.952 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:34.952 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:34.952 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:34.952 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:34.952 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:34.952 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=425, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#529}
11:49:34.952 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:34.966 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.966 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.966 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:34.966 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:34.966 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:34.966 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:34.966 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:34.966 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:34.966 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:34.966 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:34.966 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:34.967 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=529}
11:49:34.967 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:34.982 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.982 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.982 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:34.983 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:34.983 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:34.983 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:34.983 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:34.984 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 530
11:49:34.984 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:34.984 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:34.984 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:34.984 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:34.984 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:34.984 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:34.984 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:34.984 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=530}
11:49:34.999 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.999 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:34.999 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:34.999 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.000 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:35.000 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:35.001 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 426
11:49:35.001 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:35.001 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.001 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.001 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.001 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:35.001 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.001 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.001 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=426, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#530}
11:49:35.015 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.016 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.016 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:35.016 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#426]
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 530
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#426]
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#530]
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:35.017 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#530]
11:49:35.017 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#426
11:49:35.017 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.018 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.018 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.018 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.018 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.018 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.018 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:35.018 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.018 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.018 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=426, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#530}
11:49:35.018 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:35.033 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.033 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.033 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:35.033 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.033 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.033 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.033 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.033 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.033 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:35.033 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.033 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.033 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=530}
11:49:35.034 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:35.049 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.049 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.049 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:35.049 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:35.050 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#426
11:49:35.050 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.051 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.051 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.051 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:35.051 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:35.052 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 531
11:49:35.052 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:35.052 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.052 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.052 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.052 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:35.052 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.052 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.052 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=531}
11:49:35.067 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.067 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.067 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.067 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.067 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:35.067 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:35.068 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 532
11:49:35.068 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:35.068 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.068 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.068 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.068 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:35.068 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.068 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.068 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=532}
11:49:35.083 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.083 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.083 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.083 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.083 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:35.083 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:35.084 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 427
11:49:35.084 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:35.084 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.084 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.084 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.085 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:35.085 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.085 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.085 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=427, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#531}
11:49:35.100 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.100 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.100 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.100 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.100 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:35.100 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:35.101 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 428
11:49:35.101 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:35.102 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.102 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.102 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.102 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:35.102 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.102 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.102 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=428, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#532}
11:49:35.116 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.117 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.117 [Test worker] DEBUG org.hibernate.query.criteria.internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Products as generatedAlias0
11:49:35.118 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from web_prak.java.classes.Products as generatedAlias0
11:49:35.119 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:35.120 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'web_prak'
       |     |  |  |  \-[IDENT] Node: 'java'
       |     |  |  \-[IDENT] Node: 'classes'
       |     |  \-[IDENT] Node: 'Products'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

11:49:35.121 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:35.121 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Products (generatedAlias0) -> products0_
11:49:35.122 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> products0_.product_id
11:49:35.122 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:35.122 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} products0_.product_id ) ( FromClause{level=1} products products0_ ) )
11:49:35.123 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Products): [products]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

11:49:35.124 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [products products0_]
11:49:35.124 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:35.125 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (products)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'products0_.product_id as product_1_3_' {alias=generatedAlias0, className=web_prak.java.classes.Products, tableAlias=products0_}
    |  \-[SQL_TOKEN] SqlFragment: 'products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[products0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'products products0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}

11:49:35.125 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:35.125 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from web_prak.java.classes.Products as generatedAlias0
11:49:35.125 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_
11:49:35.125 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:35.126 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_
Hibernate: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_
11:49:35.129 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:35.129 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#427]
11:49:35.130 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:35.130 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#428]
11:49:35.131 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#427]
11:49:35.131 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:35.131 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:35.131 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:35.132 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:35.132 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:35.132 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:35.132 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 531
11:49:35.132 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:35.132 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:35.134 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:35.135 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#531]
11:49:35.135 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:35.135 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:35.135 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:35.135 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:35.135 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#531]
11:49:35.136 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#531
11:49:35.136 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:35.136 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:35.136 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:35.136 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:35.136 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:35.136 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:35.136 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#427]
11:49:35.136 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#428]
11:49:35.136 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:35.136 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:35.137 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:35.137 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:35.137 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:35.137 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:35.137 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 532
11:49:35.137 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:35.137 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:35.138 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:35.139 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#532]
11:49:35.139 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:35.139 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:35.139 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 03 03 04
11:49:35.139 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:35.139 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#532]
11:49:35.139 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#532
11:49:35.140 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:35.140 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:35.140 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:35.140 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:35.140 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:35.140 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:35.140 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#428]
11:49:35.140 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.141 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.142 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.142 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.142 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.142 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.142 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:35.142 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.142 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.143 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=427, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#531}
11:49:35.143 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:35.156 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.156 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.156 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:35.156 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.156 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.157 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.157 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.157 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.157 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:35.157 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.157 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.157 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=428, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#532}
11:49:35.158 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:35.172 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.172 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.172 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:35.173 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.173 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.173 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.173 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.173 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.174 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:35.174 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.174 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.174 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=531}
11:49:35.174 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:35.189 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.190 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.190 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:35.190 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.190 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.190 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.190 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.190 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.191 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:35.191 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.191 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.191 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=532}
11:49:35.191 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:35.206 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.206 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.206 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:35.208 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.208 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.208 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:35.208 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:35.209 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 533
11:49:35.209 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:35.210 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.210 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.210 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.210 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:35.210 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.210 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.210 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=533}
11:49:35.223 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.223 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.223 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.223 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.223 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:35.223 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:35.224 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 534
11:49:35.225 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:35.225 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.225 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.225 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.225 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:35.225 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.225 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.225 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=534}
11:49:35.239 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.239 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.239 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.239 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.239 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:35.240 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:35.240 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 429
11:49:35.240 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:35.241 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.241 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.241 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.241 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:35.241 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.241 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.241 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=429, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#533}
11:49:35.508 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.508 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.509 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.509 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.509 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:35.509 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:35.512 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 430
11:49:35.512 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:35.512 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.512 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.512 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.512 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:35.512 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.512 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.513 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2023-09-11, product_id=430, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#534}
11:49:35.777 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.777 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.778 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM web_prak.java.classes.Products WHERE expiration_date_from = :param
11:49:35.779 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:35.780 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'web_prak'
    |           |  |  \-[IDENT] Node: 'java'
    |           |  \-[IDENT] Node: 'classes'
    |           \-[IDENT] Node: 'Products'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'expiration_date_from'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:35.781 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:35.782 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Products (<no alias>) -> products0_
11:49:35.782 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
11:49:35.782 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : expiration_date_from -> org.hibernate.type.DateType@64bba0eb
11:49:35.782 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.expiration_date_from -> products0_.expiration_date_from
11:49:35.782 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:35.782 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} products products0_ ) ( WHERE ( = ( products0_.expiration_date_from {synthetic-alias} expiration_date_from ) ? ) ) )
11:49:35.783 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
11:49:35.783 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Products): [products]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          | path: {synthetic-alias}.expiration_date_from
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: expiration_date_from
          \-ParameterNode

11:49:35.783 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [products products0_]
11:49:35.783 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:35.783 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (products)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'products0_.product_id as product_1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}}
    |  \-[SQL_TOKEN] SqlFragment: 'products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[products0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'products products0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'products0_.expiration_date_from' {propertyName=expiration_date_from,dereferenceType=PRIMITIVE,getPropertyPath=expiration_date_from,path={synthetic-alias}.expiration_date_from,tableAlias=products0_,className=web_prak.java.classes.Products,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'expiration_date_from' {originalText=expiration_date_from}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.DateType@64bba0eb}

11:49:35.783 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:35.784 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM web_prak.java.classes.Products WHERE expiration_date_from = :param
11:49:35.784 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_from=?
11:49:35.784 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:35.784 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_from=?
Hibernate: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_from=?
11:49:35.785 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:35.785 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#429]
11:49:35.785 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:35.785 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#430]
11:49:35.785 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#429]
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 533
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:35.786 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:35.786 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#533]
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:35.786 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#533]
11:49:35.787 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#533
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#429]
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#430]
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2023-09-11
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 534
11:49:35.787 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:35.787 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:35.788 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#534]
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 03 03 04
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#534]
11:49:35.788 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#534
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:35.788 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#430]
11:49:35.788 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:35.789 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:35.789 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:35.789 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:35.789 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:35.789 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:35.789 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:35.789 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:35.789 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:35.789 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=429, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#533}
11:49:35.789 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:36.386 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.387 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.387 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.387 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.387 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.387 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.388 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.388 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.388 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.388 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.388 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.388 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2023-09-11, product_id=430, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#534}
11:49:36.388 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:36.403 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.403 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.403 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.403 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.403 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.404 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.404 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.404 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.404 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.404 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.404 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.404 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=533}
11:49:36.404 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:36.419 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.419 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.419 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.420 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.420 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.420 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.420 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.420 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.420 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.420 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.420 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.421 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=534}
11:49:36.421 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:36.436 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.436 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.436 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.438 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.438 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.439 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.439 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:36.440 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 535
11:49:36.440 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.441 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.441 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.441 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.441 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.441 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.441 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.441 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=535}
11:49:36.452 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.452 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.453 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.453 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.453 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.453 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:36.453 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 536
11:49:36.453 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.454 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.454 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.454 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.454 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.454 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.454 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.454 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=536}
11:49:36.470 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.470 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.470 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.470 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.470 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.470 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:36.471 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 431
11:49:36.471 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.471 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.471 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.471 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.472 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.472 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.472 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.472 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=431, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#535}
11:49:36.486 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.486 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.486 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.486 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.487 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.487 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:36.488 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 432
11:49:36.488 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.488 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.488 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.488 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.488 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.488 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.488 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.488 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2023-09-11, product_id=432, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#536}
11:49:36.503 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.503 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.504 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM web_prak.java.classes.Products WHERE expiration_date_from >= :param
11:49:36.504 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:36.504 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'web_prak'
    |           |  |  \-[IDENT] Node: 'java'
    |           |  \-[IDENT] Node: 'classes'
    |           \-[IDENT] Node: 'Products'
    \-[WHERE] Node: 'WHERE'
       \-[GE] Node: '>='
          +-[IDENT] Node: 'expiration_date_from'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:36.504 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:36.504 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Products (<no alias>) -> products0_
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : expiration_date_from -> org.hibernate.type.DateType@64bba0eb
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.expiration_date_from -> products0_.expiration_date_from
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} products products0_ ) ( WHERE ( >= ( products0_.expiration_date_from {synthetic-alias} expiration_date_from ) ? ) ) )
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Products): [products]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          | path: {synthetic-alias}.expiration_date_from
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: expiration_date_from
          \-ParameterNode

11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [products products0_]
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (products)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'products0_.product_id as product_1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}}
    |  \-[SQL_TOKEN] SqlFragment: 'products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[products0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'products products0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[GE] BinaryLogicOperatorNode: '>='
          +-[DOT] DotNode: 'products0_.expiration_date_from' {propertyName=expiration_date_from,dereferenceType=PRIMITIVE,getPropertyPath=expiration_date_from,path={synthetic-alias}.expiration_date_from,tableAlias=products0_,className=web_prak.java.classes.Products,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'expiration_date_from' {originalText=expiration_date_from}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.DateType@64bba0eb}

11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM web_prak.java.classes.Products WHERE expiration_date_from >= :param
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_from>=?
11:49:36.505 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:36.506 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_from>=?
Hibernate: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_from>=?
11:49:36.507 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:36.507 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#431]
11:49:36.507 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:36.507 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#432]
11:49:36.507 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#431]
11:49:36.507 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:36.507 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:36.507 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:36.507 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:36.507 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:36.507 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:36.507 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 535
11:49:36.507 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:36.507 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:36.508 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#535]
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#535]
11:49:36.508 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#535
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#431]
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#432]
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2023-09-11
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 536
11:49:36.508 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:36.508 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:36.509 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#536]
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 03 03 04
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#536]
11:49:36.509 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#536
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:36.509 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#432]
11:49:36.509 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.510 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.510 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.510 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.510 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.510 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.510 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.510 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.510 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.510 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=431, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#535}
11:49:36.510 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:36.530 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.530 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.530 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.531 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.531 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.531 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.531 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.531 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.531 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.531 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.531 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.531 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2023-09-11, product_id=432, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#536}
11:49:36.531 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:36.548 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.548 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.548 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.548 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.548 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.548 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.548 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.548 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.548 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.548 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.548 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.548 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=535}
11:49:36.548 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:36.564 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.564 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.564 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.564 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.564 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.564 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.564 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.564 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.564 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.564 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.564 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.565 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=536}
11:49:36.565 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:36.581 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.581 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.581 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.582 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.582 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.582 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.582 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:36.583 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 537
11:49:36.583 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.583 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.583 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.583 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.583 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.583 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.583 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.583 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=537}
11:49:36.598 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.598 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.598 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.598 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.598 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.598 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:36.598 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 538
11:49:36.598 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.598 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.599 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.599 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.599 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.599 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.599 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.599 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=538}
11:49:36.615 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.615 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.615 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.615 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.615 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.615 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:36.616 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 433
11:49:36.616 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.616 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.616 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.616 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.616 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.616 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.616 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.616 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=433, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#537}
11:49:36.631 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.631 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.632 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.632 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.632 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.632 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:36.633 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 434
11:49:36.633 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.633 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.633 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.633 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.633 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.633 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.633 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.633 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2023-09-11, product_id=434, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#538}
11:49:36.649 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.649 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.649 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM web_prak.java.classes.Products WHERE expiration_date_from <= :param
11:49:36.649 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:36.649 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'web_prak'
    |           |  |  \-[IDENT] Node: 'java'
    |           |  \-[IDENT] Node: 'classes'
    |           \-[IDENT] Node: 'Products'
    \-[WHERE] Node: 'WHERE'
       \-[LE] Node: '<='
          +-[IDENT] Node: 'expiration_date_from'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:36.649 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Products (<no alias>) -> products0_
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : expiration_date_from -> org.hibernate.type.DateType@64bba0eb
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.expiration_date_from -> products0_.expiration_date_from
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} products products0_ ) ( WHERE ( <= ( products0_.expiration_date_from {synthetic-alias} expiration_date_from ) ? ) ) )
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Products): [products]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          | path: {synthetic-alias}.expiration_date_from
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: expiration_date_from
          \-ParameterNode

11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [products products0_]
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (products)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'products0_.product_id as product_1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}}
    |  \-[SQL_TOKEN] SqlFragment: 'products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[products0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'products products0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[LE] BinaryLogicOperatorNode: '<='
          +-[DOT] DotNode: 'products0_.expiration_date_from' {propertyName=expiration_date_from,dereferenceType=PRIMITIVE,getPropertyPath=expiration_date_from,path={synthetic-alias}.expiration_date_from,tableAlias=products0_,className=web_prak.java.classes.Products,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'expiration_date_from' {originalText=expiration_date_from}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.DateType@64bba0eb}

11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM web_prak.java.classes.Products WHERE expiration_date_from <= :param
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_from<=?
11:49:36.650 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:36.651 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_from<=?
Hibernate: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_from<=?
11:49:36.651 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:36.651 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#433]
11:49:36.652 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:36.652 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#434]
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#433]
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 537
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:36.652 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:36.652 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#537]
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#537]
11:49:36.652 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#537
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:36.652 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#433]
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#434]
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2023-09-11
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 538
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:36.653 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:36.653 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#538]
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 03 03 04
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#538]
11:49:36.653 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#538
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:36.653 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#434]
11:49:36.653 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.654 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.654 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.654 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.654 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.654 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.654 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.654 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.654 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.654 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=433, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#537}
11:49:36.654 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:36.665 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.665 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.665 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.665 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.665 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.665 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.665 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.665 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.665 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.665 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.665 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.665 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2023-09-11, product_id=434, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#538}
11:49:36.665 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:36.682 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.682 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.682 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.682 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.682 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.683 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.683 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.683 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.683 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.683 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.683 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.683 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=537}
11:49:36.683 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:36.698 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.699 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.699 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.699 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.699 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.699 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.699 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.699 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.699 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.699 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.699 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.699 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=538}
11:49:36.699 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:36.716 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.716 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.716 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.717 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.717 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.717 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.717 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:36.718 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 539
11:49:36.718 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.718 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.718 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.718 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.718 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.718 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.718 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.718 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=539}
11:49:36.732 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.732 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.732 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.732 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.733 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.733 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:36.734 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 540
11:49:36.734 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.734 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.734 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.734 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.734 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.734 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.734 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.734 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=540}
11:49:36.749 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.750 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.750 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.750 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.751 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.751 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:36.753 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 435
11:49:36.753 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.753 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.754 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.754 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.754 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.754 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.754 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.754 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=435, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#539}
11:49:36.766 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.766 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.766 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.766 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.767 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.767 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:36.769 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 436
11:49:36.769 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.769 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.770 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.770 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.770 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.770 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.770 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.770 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=436, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#540}
11:49:36.783 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.783 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.784 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM web_prak.java.classes.Products WHERE expiration_date_to = :param
11:49:36.785 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:36.785 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'web_prak'
    |           |  |  \-[IDENT] Node: 'java'
    |           |  \-[IDENT] Node: 'classes'
    |           \-[IDENT] Node: 'Products'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'expiration_date_to'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:36.786 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:36.786 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Products (<no alias>) -> products0_
11:49:36.786 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
11:49:36.786 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : expiration_date_to -> org.hibernate.type.DateType@64bba0eb
11:49:36.786 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.expiration_date_to -> products0_.expiration_date_to
11:49:36.787 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:36.787 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} products products0_ ) ( WHERE ( = ( products0_.expiration_date_to {synthetic-alias} expiration_date_to ) ? ) ) )
11:49:36.787 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
11:49:36.788 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Products): [products]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          | path: {synthetic-alias}.expiration_date_to
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: expiration_date_to
          \-ParameterNode

11:49:36.788 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [products products0_]
11:49:36.788 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:36.788 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (products)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'products0_.product_id as product_1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}}
    |  \-[SQL_TOKEN] SqlFragment: 'products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[products0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'products products0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'products0_.expiration_date_to' {propertyName=expiration_date_to,dereferenceType=PRIMITIVE,getPropertyPath=expiration_date_to,path={synthetic-alias}.expiration_date_to,tableAlias=products0_,className=web_prak.java.classes.Products,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'expiration_date_to' {originalText=expiration_date_to}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.DateType@64bba0eb}

11:49:36.789 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:36.789 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM web_prak.java.classes.Products WHERE expiration_date_to = :param
11:49:36.789 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_to=?
11:49:36.789 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:36.790 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_to=?
Hibernate: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.expiration_date_to=?
11:49:36.793 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:36.793 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#435]
11:49:36.794 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:36.794 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#436]
11:49:36.795 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#435]
11:49:36.795 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:36.795 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:36.795 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:36.795 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:36.795 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:36.795 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:36.795 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 539
11:49:36.795 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:36.796 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:36.797 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:36.797 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#539]
11:49:36.797 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:36.797 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:36.797 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:36.797 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:36.797 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#539]
11:49:36.798 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#539
11:49:36.798 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:36.798 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:36.798 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:36.798 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:36.798 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:36.798 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:36.798 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#435]
11:49:36.798 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#436]
11:49:36.798 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:36.798 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:36.799 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:36.799 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:36.799 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:36.799 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:36.799 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 540
11:49:36.799 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:36.799 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:36.800 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#540]
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 03 03 04
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#540]
11:49:36.801 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#540
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:36.801 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#436]
11:49:36.802 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.803 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.803 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.803 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.804 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.804 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.804 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.804 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.804 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.804 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=435, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#539}
11:49:36.804 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:36.821 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.821 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.821 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.821 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.821 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.822 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.822 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.822 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.822 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.822 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.822 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.822 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=436, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#540}
11:49:36.822 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:36.838 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.838 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.838 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.838 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.838 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.839 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.839 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.839 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.839 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.839 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.839 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.839 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=539}
11:49:36.841 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:36.855 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.855 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.855 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.855 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.855 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.855 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.855 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.855 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.855 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.855 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.855 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.855 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=540}
11:49:36.856 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:36.872 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.872 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.872 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.873 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.873 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.873 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.873 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:36.873 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 541
11:49:36.873 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.873 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.873 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.873 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.873 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.873 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.873 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.874 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=541}
11:49:36.888 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.888 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.889 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.889 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.889 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.889 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:36.890 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 437
11:49:36.890 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.890 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.890 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.890 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.890 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.890 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.890 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.890 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=437, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#541}
11:49:36.906 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.906 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.906 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:36.907 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:36.907 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#437]
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 541
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#437]
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#541]
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:36.908 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#541]
11:49:36.908 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#437
11:49:36.908 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.909 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.909 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.909 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.909 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.909 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.909 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.909 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.909 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.909 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=437, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#541}
11:49:36.909 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:36.922 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.922 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.922 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.922 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.922 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.922 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.922 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.922 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.923 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:36.923 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.923 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.923 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=541}
11:49:36.923 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:36.939 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.939 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.939 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:36.940 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.940 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.940 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.940 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:36.941 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 542
11:49:36.941 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.941 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.941 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.941 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.942 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.942 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.942 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.942 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=542}
11:49:36.955 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.955 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.956 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.956 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.956 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.956 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:36.956 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 543
11:49:36.956 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.956 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.956 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.956 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.957 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.957 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.957 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.957 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=543}
11:49:36.973 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.973 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.974 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.974 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.974 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.974 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:36.976 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 438
11:49:36.977 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.977 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.977 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.977 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.977 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.977 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.977 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.978 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=438, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#542}
11:49:36.989 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.989 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:36.990 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:36.990 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:36.990 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:36.990 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:36.992 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 439
11:49:36.992 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:36.992 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:36.992 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:36.993 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:36.993 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:36.993 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:36.993 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:36.993 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2023-09-11, product_id=439, expiration_date_from=2021-07-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#543}
11:49:37.006 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.006 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.007 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM web_prak.java.classes.Products WHERE product_name = :param
11:49:37.007 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:37.007 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'web_prak'
    |           |  |  \-[IDENT] Node: 'java'
    |           |  \-[IDENT] Node: 'classes'
    |           \-[IDENT] Node: 'Products'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'product_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:37.007 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:37.008 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Products (<no alias>) -> products0_
11:49:37.008 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
11:49:37.008 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : product_name -> org.hibernate.type.StringType@2b170932
11:49:37.008 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.product_name -> products0_.product_name
11:49:37.009 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:37.009 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} products products0_ ) ( WHERE ( = ( products0_.product_name {synthetic-alias} product_name ) ? ) ) )
11:49:37.009 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
11:49:37.009 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Products): [products]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          | path: {synthetic-alias}.product_name
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: product_name
          \-ParameterNode

11:49:37.010 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [products products0_]
11:49:37.010 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:37.010 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (products)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'products0_.product_id as product_1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}}
    |  \-[SQL_TOKEN] SqlFragment: 'products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[products0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'products products0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'products0_.product_name' {propertyName=product_name,dereferenceType=PRIMITIVE,getPropertyPath=product_name,path={synthetic-alias}.product_name,tableAlias=products0_,className=web_prak.java.classes.Products,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'product_name' {originalText=product_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.StringType@2b170932}

11:49:37.010 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:37.010 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM web_prak.java.classes.Products WHERE product_name = :param
11:49:37.010 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.product_name=?
11:49:37.010 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:37.011 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.product_name=?
Hibernate: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.product_name=?
11:49:37.012 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:37.012 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#438]
11:49:37.013 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:37.013 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#439]
11:49:37.013 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#438]
11:49:37.013 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:37.013 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:37.013 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:37.013 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:37.013 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:37.013 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:37.013 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 542
11:49:37.013 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:37.013 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:37.014 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#542]
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#542]
11:49:37.014 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#542
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#438]
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#439]
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-07-01
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2023-09-11
11:49:37.014 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:37.015 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:37.015 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:37.015 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 543
11:49:37.015 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:37.015 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:37.015 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:37.015 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#543]
11:49:37.015 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:37.015 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:37.015 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 03 03 04
11:49:37.015 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:37.016 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#543]
11:49:37.016 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#543
11:49:37.016 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:37.016 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:37.016 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:37.016 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:37.016 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:37.016 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:37.016 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#439]
11:49:37.016 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.016 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.016 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.017 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.017 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.017 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.017 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:37.017 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.017 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.017 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=438, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#542}
11:49:37.017 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:37.033 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.034 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.034 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:37.034 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.034 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.034 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.034 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.034 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.034 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:37.034 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.034 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.034 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2023-09-11, product_id=439, expiration_date_from=2021-07-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#543}
11:49:37.034 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:37.051 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.051 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.051 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:37.051 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.051 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.052 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.052 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.052 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.052 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:37.052 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.052 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.052 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=542}
11:49:37.052 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:37.067 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.067 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.068 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:37.068 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.068 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.068 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.068 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.068 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.068 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:37.068 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.068 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.068 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=543}
11:49:37.068 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:37.084 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.084 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.084 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:37.084 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.084 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.085 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:37.085 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:37.085 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 544
11:49:37.085 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:37.085 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.085 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.085 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.085 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:37.085 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.085 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.085 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=544}
11:49:37.101 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.101 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.101 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.101 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.101 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:37.101 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:37.102 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 545
11:49:37.102 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:37.102 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.102 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.102 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.102 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:37.102 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.102 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.102 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=545}
11:49:37.117 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.117 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.118 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.118 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.118 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:37.118 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:37.119 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 440
11:49:37.119 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:37.119 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.119 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.119 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.119 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:37.119 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.119 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.119 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=440, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#544}
11:49:37.134 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.134 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.135 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.135 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.135 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:37.135 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:37.136 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 441
11:49:37.137 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:37.137 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.137 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.137 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.137 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:37.137 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.137 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.137 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2023-09-11, product_id=441, expiration_date_from=2021-07-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#545}
11:49:37.151 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.151 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.152 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM web_prak.java.classes.Products WHERE type = :param
11:49:37.152 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:37.153 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'web_prak'
    |           |  |  \-[IDENT] Node: 'java'
    |           |  \-[IDENT] Node: 'classes'
    |           \-[IDENT] Node: 'Products'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'type'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param'

11:49:37.153 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
11:49:37.154 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : web_prak.java.classes.Products (<no alias>) -> products0_
11:49:37.154 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
11:49:37.154 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : type -> org.hibernate.type.StringType@2b170932
11:49:37.154 [Test worker] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.type -> products0_.type
11:49:37.154 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
11:49:37.154 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} products products0_ ) ( WHERE ( = ( products0_.type {synthetic-alias} type ) ? ) ) )
11:49:37.155 [Test worker] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
11:49:37.155 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Products): [products]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          | path: {synthetic-alias}.type
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(web_prak.java.classes.Products)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: type
          \-ParameterNode

11:49:37.156 [Test worker] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [products products0_]
11:49:37.156 [Test worker] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
11:49:37.156 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (products)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'products0_.product_id as product_1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}}
    |  \-[SQL_TOKEN] SqlFragment: 'products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[products0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'products products0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=products,tableAlias=products0_,origin=null,columns={,className=web_prak.java.classes.Products}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'products0_.type' {propertyName=type,dereferenceType=PRIMITIVE,getPropertyPath=type,path={synthetic-alias}.type,tableAlias=products0_,className=web_prak.java.classes.Products,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'type' {originalText=type}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param, expectedType=org.hibernate.type.StringType@2b170932}

11:49:37.156 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:37.157 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM web_prak.java.classes.Products WHERE type = :param
11:49:37.157 [Test worker] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.type=?
11:49:37.157 [Test worker] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
11:49:37.157 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.type=?
Hibernate: select products0_.product_id as product_1_3_, products0_.expiration_date_from as expirati2_3_, products0_.expiration_date_to as expirati3_3_, products0_.measure as measure4_3_, products0_.place_id as place_id8_3_, products0_.product_name as product_5_3_, products0_.quantity as quantity6_3_, products0_.type as type7_3_ from products products0_ where products0_.type=?
11:49:37.159 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 0
11:49:37.160 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#440]
11:49:37.161 [Test worker] DEBUG org.hibernate.loader.Loader - Result set row: 1
11:49:37.161 [Test worker] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[web_prak.java.classes.Products#441]
11:49:37.162 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#440]
11:49:37.162 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:37.162 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:37.162 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:37.162 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:37.162 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:37.162 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:37.162 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 544
11:49:37.162 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:37.163 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:37.164 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#544]
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#544]
11:49:37.165 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#544
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#440]
11:49:37.165 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#441]
11:49:37.166 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-07-01
11:49:37.166 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:37.166 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2023-09-11
11:49:37.166 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:37.166 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:37.166 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:37.166 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 545
11:49:37.166 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:37.166 [Test worker] DEBUG org.hibernate.SQL - select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
Hibernate: select register_p0_.place_id as place_id1_4_0_, register_p0_.free as free2_4_0_, register_p0_.storage_location as storage_3_4_0_ from register_place register_p0_ where register_p0_.place_id=?
11:49:37.167 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#545]
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 03 03 04
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#545]
11:49:37.168 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Register_place#545
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:37.168 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#441]
11:49:37.169 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.170 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.170 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.170 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.170 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.170 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.171 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:37.171 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.171 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.171 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=440, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#544}
11:49:37.171 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:37.190 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.190 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.190 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:37.190 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.190 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.190 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.190 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.190 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.190 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:37.190 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.190 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.191 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2023-09-11, product_id=441, expiration_date_from=2021-07-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#545}
11:49:37.191 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:37.206 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.206 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.206 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:37.206 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.206 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.207 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.207 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.207 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.207 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:37.207 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.207 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.207 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=544}
11:49:37.207 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:37.223 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.224 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.224 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:37.224 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.224 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.224 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.224 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.224 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.225 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:37.225 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.225 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.225 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=03 03 04, free=нет, place_id=545}
11:49:37.225 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:37.240 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.240 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.240 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:37.241 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.241 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.241 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:37.241 [Test worker] DEBUG org.hibernate.SQL - insert into register_place (free, storage_location) values (?, ?)
Hibernate: insert into register_place (free, storage_location) values (?, ?)
11:49:37.241 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 546
11:49:37.241 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:37.241 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.241 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.241 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.241 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:37.241 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.241 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.241 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=546}
11:49:37.257 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.257 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.257 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.257 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.257 [Test worker] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
11:49:37.257 [Test worker] DEBUG org.hibernate.SQL - insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into products (expiration_date_from, expiration_date_to, measure, place_id, product_name, quantity, type) values (?, ?, ?, ?, ?, ?, ?)
11:49:37.258 [Test worker] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 442
11:49:37.258 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
11:49:37.258 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.258 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.258 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.258 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
11:49:37.258 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.258 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.258 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=442, expiration_date_from=2021-08-01, type=Ноутбуки, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#546}
11:49:37.273 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.273 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.274 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:37.274 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:37.274 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#442]
11:49:37.274 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:37.274 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:37.274 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:37.274 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:37.274 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:37.274 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:37.274 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 546
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ноутбуки
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#442]
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#546]
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#546]
11:49:37.275 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#442
11:49:37.275 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.275 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.275 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.275 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.276 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
11:49:37.276 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.276 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.276 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=442, expiration_date_from=2021-08-01, type=Ультрабук, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#546}
11:49:37.276 [Test worker] DEBUG org.hibernate.SQL - update products set expiration_date_from=?, expiration_date_to=?, measure=?, place_id=?, product_name=?, quantity=?, type=? where product_id=?
Hibernate: update products set expiration_date_from=?, expiration_date_to=?, measure=?, place_id=?, product_name=?, quantity=?, type=? where product_id=?
11:49:37.291 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.291 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.291 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:37.291 [Test worker] DEBUG org.hibernate.SQL - select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
Hibernate: select products0_.product_id as product_1_3_0_, products0_.expiration_date_from as expirati2_3_0_, products0_.expiration_date_to as expirati3_3_0_, products0_.measure as measure4_3_0_, products0_.place_id as place_id8_3_0_, products0_.product_name as product_5_3_0_, products0_.quantity as quantity6_3_0_, products0_.type as type7_3_0_, register_p1_.place_id as place_id1_4_1_, register_p1_.free as free2_4_1_, register_p1_.storage_location as storage_3_4_1_ from products products0_ left outer join register_place register_p1_ on products0_.place_id=register_p1_.place_id where products0_.product_id=?
11:49:37.292 [Test worker] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Products#442]
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_from` : value = 2021-08-01
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_from`)  - enhanced for lazy-loading? - false
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `expiration_date_to` : value = 2022-08-01
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`expiration_date_to`)  - enhanced for lazy-loading? - false
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `measure` : value = штук
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`measure`)  - enhanced for lazy-loading? - false
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `place_id` : value = 546
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`place_id`)  - enhanced for lazy-loading? - false
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `product_name` : value = Asus Rog Strix
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`product_name`)  - enhanced for lazy-loading? - false
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `quantity` : value = 5
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `type` : value = Ультрабук
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`type`)  - enhanced for lazy-loading? - false
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Products#442]
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [web_prak.java.classes.Register_place#546]
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `free` : value = нет
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`free`)  - enhanced for lazy-loading? - false
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `storage_location` : value = 02 10 03
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`storage_location`)  - enhanced for lazy-loading? - false
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [web_prak.java.classes.Register_place#546]
11:49:37.292 [Test worker] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : web_prak.java.classes.Products#442
11:49:37.292 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.292 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.293 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.293 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.293 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.293 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.293 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:37.293 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.293 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.293 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Products{measure=штук, quantity=5, expiration_date_to=2022-08-01, product_id=442, expiration_date_from=2021-08-01, type=Ультрабук, product_name=Asus Rog Strix, place_id=web_prak.java.classes.Register_place#546}
11:49:37.293 [Test worker] DEBUG org.hibernate.SQL - delete from products where product_id=?
Hibernate: delete from products where product_id=?
11:49:37.307 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.307 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.307 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
11:49:37.307 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
11:49:37.307 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
11:49:37.307 [Test worker] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
11:49:37.307 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
11:49:37.307 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
11:49:37.307 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
11:49:37.307 [Test worker] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
11:49:37.307 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
11:49:37.307 [Test worker] DEBUG org.hibernate.internal.util.EntityPrinter - web_prak.java.classes.Register_place{storage_location=02 10 03, free=нет, place_id=546}
11:49:37.308 [Test worker] DEBUG org.hibernate.SQL - delete from register_place where place_id=?
Hibernate: delete from register_place where place_id=?
11:49:37.324 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.324 [Test worker] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
11:49:37.324 [Test worker] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl - HHH000420: Closing un-released batch
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
